{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/covid19-dashboard/c19-dashboard/c19-dashboard.component.ts","./src/app/covid19-dashboard/c19-dashboard/c19-dashboard.component.html","./src/app/covid19-dashboard/case-statistic/case-statistic.component.ts","./src/app/covid19-dashboard/case-statistic/case-statistic.component.html","./src/app/covid19-dashboard/case-table/case-table.component.ts","./src/app/covid19-dashboard/case-table/case-table.component.html","./src/app/covid19-dashboard/services/ainzine/c19.service.ts","./src/app/interceptors/loading.interceptor.ts","./src/app/layouts/fullscreen/fullscreen-home/fullscreen-home.component.ts","./src/app/layouts/fullscreen/fullscreen-home/fullscreen-home.component.html","./src/app/layouts/fullscreen/fullscreen.component.ts","./src/app/layouts/fullscreen/fullscreen.component.html","./src/app/layouts/fullscreen/fullscreen.module.ts","./src/app/leetcode-reminder/leetcode-reminder.component.ts","./src/app/leetcode-reminder/leetcode-reminder.component.html","./src/app/modules/dialog/dialog.module.ts","./src/app/modules/dialog/dialog.service.ts","./src/app/modules/dialog/dialog/dialog.component.ts","./src/app/modules/dialog/dialog/dialog.component.html","./src/app/modules/material/material.module.ts","./src/app/modules/modal/modal.component.ts","./src/app/modules/modal/modal.component.html","./src/app/modules/modal/modal.service.ts","./src/app/projects/projects.component.ts","./src/app/projects/projects.component.html","./src/app/shared/dynamic-nav/dynamic-nav.component.ts","./src/app/shared/dynamic-nav/dynamic-nav.component.html","./src/app/shared/introduction/introduction.component.ts","./src/app/shared/introduction/introduction.component.html","./src/app/shared/loading-screen/loading-screen.component.ts","./src/app/shared/loading-screen/loading-screen.component.html","./src/app/shared/loading-screen/loading-screen.service.ts","./src/app/shared/navigation/navigation.component.ts","./src/app/shared/navigation/navigation.component.html","./src/app/shared/page404/page404.component.ts","./src/app/shared/page404/page404.component.html","./src/app/shared/shared.module.ts","./src/app/todo-app/filter-store.service.ts","./src/app/todo-app/todo-home/todo-home.component.ts","./src/app/todo-app/todo-home/todo-home.component.html","./src/app/todo-app/todo.model.ts","./src/app/todo-app/todo/todo.component.ts","./src/app/todo-app/todo/todo.component.html","./src/app/todo-app/todos-api.service.ts","./src/app/todo-app/todos-store.service.ts","./src/environments/environment.common.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { Page404Component } from \"./shared/page404/page404.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    loadChildren: () =>\n      import(\"./layouts/default/default.module\").then((m) => m.DefaultModule),\n  },\n  {\n    path: \"playground\",\n    loadChildren: () =>\n      import(\"./m-playground/playground.module\").then(\n        (m) => m.PlaygroundModule\n      ),\n  },\n  // {\n  //   path: \"song-lyrics\",\n  //   loadChildren: () =>\n  //     import(\"./song-lyrics/song-lyrics.module\").then(m => m.SongLyricsModule)\n  // },\n  // {\n  //   path: \"algorithm-visualizer\",\n  //   loadChildren: () =>\n  //     import(\"./algorithm-visualizer/algorithm-visualizer.module\").then(\n  //       m => m.AlgorithmVisualizerModule\n  //     )\n  // },\n  {\n    path: \"apps\",\n    loadChildren: () =>\n      import(\"./layouts/fullscreen/fullscreen.module\").then(\n        (m) => m.FullscreenModule\n      ),\n  },\n  {\n    path: \"bootstrap\",\n    loadChildren: () =>\n      import(\"./bootstrap-ui/bootstrap-ui.module\").then(\n        (m) => m.BootstrapUIModule\n      ),\n  },\n  {\n    path: \"robinhood\", //lazy load route\n    loadChildren: () =>\n      import(\"projects/robinhood/src/lib/robinhood.module\").then(\n        (m) => m.RobinhoodLibModule\n      ),\n  },\n  {\n    path: \"**\", //can be moved to defaultModule lazy loading as well\n    component: Page404Component,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Rattanak - 2020';\n}\n","<app-loading-screen></app-loading-screen>\n\n<router-outlet></router-outlet>\n\n<app-modal></app-modal>","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { AppComponent } from \"./app.component\";\nimport { ProjectsComponent } from \"./projects/projects.component\";\nimport { loadingInterceptorProviders } from \"./interceptors/loading.interceptor\";\nimport { LeetcodeReminderComponent } from \"./leetcode-reminder/leetcode-reminder.component\";\nimport { SharedModule } from \"./shared/shared.module\";\nimport { FullscreenModule } from \"./layouts/fullscreen/fullscreen.module\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n// leave it for now\nimport { MaterialModule } from \"./modules/material/material.module\";\nimport { DialogModule } from \"./modules/dialog/dialog.module\";\nimport { ModalComponent } from \"./modules/modal/modal.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectsComponent,\n    LeetcodeReminderComponent,\n    ModalComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    SharedModule,\n    FullscreenModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    DialogModule,\n  ],\n  exports: [SharedModule, FormsModule, BrowserModule],\n  providers: [loadingInterceptorProviders],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { C19Service } from \"../services/ainzine/c19.service\";\n\nexport interface I_C19_stat {\n  confirmed: number;\n  deaths: number;\n  recovered: number;\n}\n@Component({\n  selector: \"app-c19-dashboard\",\n  templateUrl: \"./c19-dashboard.component.html\",\n  styleUrls: [\"./c19-dashboard.component.scss\"]\n})\nexport class C19DashboardComponent implements OnInit {\n  constructor(private c19Service: C19Service) {}\n\n  // lat = 40.73061;\n  // lng = -73.935242;\n\n  selectedCountryCode = \"US\";\n\n  selectedMarker = {\n    country: \"US\"\n  };\n  worldStat: I_C19_stat;\n  countryStat: I_C19_stat;\n\n  markers = [];\n\n  lastUpdatedAt: Date;\n\n  ngOnInit(): void {\n    this.c19Service.getBrief().subscribe((data: I_C19_stat) => {\n      this.lastUpdatedAt = new Date();\n      this.worldStat = data;\n    });\n\n    this.c19Service.getLatest().subscribe(data => {\n      this.markers = data;\n    });\n\n    this.getTimeSeriesByCountry();\n  }\n\n  getTimeSeriesByCountry(marker?) {\n    let countryCode = \"US\";\n    if (marker) {\n      countryCode = marker.countrycode.iso2 || marker.countrycode.iso3;\n    }\n\n    this.c19Service\n      .getTimeSeriesByCountry(countryCode)\n      .subscribe((data: any) => {\n        if (data && data[0].timeseries) {\n          const times = data[0].timeseries;\n          let datesArray = Object.keys(times);\n          if (datesArray) {\n            this.countryStat =\n              data[0].timeseries[datesArray[datesArray.length - 1]];\n            console.log(\n              \"C19DashboardComponent -> ngOnInit -> this.countryStat\",\n              this.countryStat\n            );\n          }\n        }\n      });\n  }\n}\n","<section class=\"bg-light header d-flex justify-content-start py-3\">\n  <span>\n    <a style=\"margin-right: 25px\" routerLink=\"../covid19-dashboard\">Dashboard</a>\n    <a style=\"margin-right: 25px\" routerLink=\"../covid19-countries-table\">Risk Table</a>\n  </span>\n  <span class=\"text-secondary\">Last updated on: {{ lastUpdatedAt | date: \"short\" }}</span>\n  &nbsp;&nbsp;\n</section>\n<br />\n<section class=\"summary\">\n  <div class=\"row d-flex align-items-end\">\n    <div class=\"col\">\n      <div class=\"d-flex align-items-center\">\n        <h3 class=\"mr-3\">\n          By Country - <strong> {{ this.selectedMarker.country }}</strong>\n        </h3>\n        <mat-form-field>\n          <mat-label>Select a country</mat-label>\n          <mat-select [(value)]=\"selectedMarker\" (selectionChange)=\"getTimeSeriesByCountry(selectedMarker)\">\n            <mat-option *ngFor=\"let m of markers\" [value]=\"m\">{{\n              m.country\n            }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <c19-case-statistic [stat]=\"countryStat\"></c19-case-statistic>\n    </div>\n\n    <div class=\"col\">\n      <h3>Global &nbsp;</h3>\n      <c19-case-statistic [stat]=\"worldStat\"></c19-case-statistic>\n    </div>\n  </div>\n</section>","import { Component, OnInit, Input } from \"@angular/core\";\nimport { I_C19_stat } from \"../c19-dashboard/c19-dashboard.component\";\n\n@Component({\n  selector: \"c19-case-statistic\",\n  templateUrl: \"./case-statistic.component.html\",\n  styleUrls: [\"./case-statistic.component.scss\"]\n})\nexport class CaseStatisticComponent implements OnInit {\n  @Input() stat: I_C19_stat;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<ng-container *ngIf=\"stat\">\n  <div class=\"brief-item mb-3 \">\n    <!-- <span class=\"material-icons md-36 yellow\">\n        confirmation_number\n      </span> -->\n    <span style=\"margin: 8px; color: #8871E7\">\n      <i class=\"fas fas fa-thermometer-full fa-2x\"></i>\n    </span>\n    <div>\n      <h3 class=\"card-title mb-0\">{{ stat.confirmed }}</h3>\n      <p class=\"brief-item-label\">\n        Confirmed\n      </p>\n    </div>\n  </div>\n  <div class=\"brief-item mb-3 \">\n    <span class=\"material-icons md-36 red\">\n      report\n    </span>\n    <div>\n      <h3 class=\"card-title mb-0\">{{ stat.deaths }}</h3>\n      <p class=\"brief-item-label\">\n        Death\n      </p>\n    </div>\n  </div>\n  <div class=\"brief-item mb-3 \">\n    <span class=\"material-icons md-36 green\">\n      healing\n    </span>\n    <div>\n      <h3 class=\"card-title mb-0\">\n        {{ !stat.recovered ? \"N/A\" : stat.recovered }}\n      </h3>\n      <p class=\"brief-item-label\">\n        Recovered\n      </p>\n    </div>\n  </div>\n  <div class=\"brief-item mb-3 \">\n    <!-- <span class=\"material-icons md-36 orange\">\n        trending_up\n      </span> -->\n    <span style=\"margin: 8px; color: #EB7946;\">\n      <i class=\"fas fa-chart-line fa-2x\"></i>\n    </span>\n    <div>\n      <h3 class=\"card-title mb-0\">\n        {{ stat.deaths / stat.confirmed | percent }}\n      </h3>\n      <p class=\"brief-item-label\">\n        Mortality Rate\n      </p>\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnInit, ViewChild, AfterViewInit } from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { C19Service, ICountry } from \"../services/ainzine/c19.service\";\n\n@Component({\n  selector: \"app-case-table\",\n  templateUrl: \"./case-table.component.html\",\n  styleUrls: [\"./case-table.component.scss\"]\n})\nexport class CaseTableComponent implements OnInit, AfterViewInit {\n  lastUpdatedAt: Date;\n  displayedColumns: string[] = [\n    \"index\",\n    \"country\",\n    \"confirmed\",\n    \"deaths\",\n    \"recovered\"\n  ];\n  dataSource: MatTableDataSource<ICountry>;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(private c19Service: C19Service) {}\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    this.c19Service.getLatest().subscribe((data: ICountry[]) => {\n      data.sort((a, b) => {\n        return b.confirmed - a.confirmed;\n      });\n\n      data.map((item, index) => {\n        item.index = index + 1;\n        return item;\n      });\n\n      // Assign the data to the data source for the table to render\n      this.dataSource = new MatTableDataSource(data);\n      console.log(\n        \"CaseTableComponent -> ngOnInit -> this.dataSource\",\n        this.dataSource\n      );\n\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.paginator.pageSize = 20;\n      this.dataSource.sort = this.sort;\n      this.lastUpdatedAt = new Date();\n    });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource && this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","<section class=\"bg-light header d-flex justify-content-start py-3\">\n  <span>\n    <a style=\"margin-right: 25px\" routerLink=\"../covid19-dashboard\"\n      >Dashboard</a\n    >\n    <a style=\"margin-right: 25px\" routerLink=\"../covid19-countries-table\"\n      >Risk Table</a\n    >\n  </span>\n  <span class=\"text-secondary\"\n    >Last updated on: {{ lastUpdatedAt | date: \"short\" }}</span\n  >\n  &nbsp;&nbsp;\n  <a routerLink=\"./\">Refresh</a>\n</section>\n<br />\n<section class=\"brief\">\n  <!-- TABLE -->\n  <mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Type a country\"\n    />\n  </mat-form-field>\n\n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n      <!-- Rank Column -->\n      <ng-container matColumnDef=\"index\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Rank</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.index }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"country\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Country</th>\n        <td mat-cell *matCellDef=\"let row\">\n          {{ row.country }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"confirmed\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Confirmed</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.confirmed }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"deaths\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Death</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.deaths }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"recovered\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Recovered</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.recovered }}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n  </div>\n  <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 75, 100]\"></mat-paginator>\n</section>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\n\nconst BASE_URL = \"https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/\";\nconst API_BASE_URL = BASE_URL + \"jhu-edu\";\n\nconst API_ENDPOINTS = {\n  brief: `${API_BASE_URL}/brief`,\n  latest: `${API_BASE_URL}/latest`,\n  timeSeries: `${API_BASE_URL}/timeseries`\n};\n\nexport interface ICountry {\n  location: string;\n  country: string;\n  countrycode: object;\n  provincestate: string;\n  confirmed: number;\n  deaths: number;\n  recovered: number;\n  confirmedStr: string;\n  index?: number;\n}\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class C19Service {\n  constructor(private httpClient: HttpClient) {}\n\n  getBrief() {\n    return this.httpClient.get(API_ENDPOINTS.brief);\n  }\n\n  getLatest() {\n    // transform data\n    return this.httpClient.get(API_ENDPOINTS.latest).pipe(\n      map((response: any[]) => {\n        return response\n          .filter(item => item.confirmed > 10)\n          .map(item => {\n            return {\n              location: item.location,\n              country: item.countryregion,\n              countrycode: item.countrycode,\n              provincestate: item.provincestate,\n              confirmedStr: item.confirmed + \"\",\n              confirmed: item.confirmed,\n              deaths: item.deaths,\n              recovered: item.recovered\n            };\n          });\n      })\n    );\n  }\n\n  getTimeSeriesByCountry(countryCode = \"US\") {\n    return this.httpClient.get(\n      API_ENDPOINTS.timeSeries + \"?onlyCountries=true&iso2=\" + countryCode\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HTTP_INTERCEPTORS\n} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { LoadingScreenService } from \"../shared/loading-screen/loading-screen.service\";\nimport { finalize, delay } from \"rxjs/operators\";\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  activeRequests: number = 0;\n\n  constructor(private loadingScreenService: LoadingScreenService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    if (this.activeRequests === 0) {\n      this.loadingScreenService.startLoading();\n    }\n    this.activeRequests++;\n\n    return next.handle(request).pipe(\n      // delay(1000), // use to mimic slow network\n      finalize(() => {\n        this.activeRequests--;\n        if (this.activeRequests === 0) {\n          this.loadingScreenService.stopLoading();\n        }\n      })\n    );\n  }\n}\n\nexport const loadingInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true }\n];\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fullscreen-home',\n  templateUrl: './fullscreen-home.component.html',\n  styleUrls: ['./fullscreen-home.component.scss']\n})\nexport class FullscreenHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>List of app projects</h2>\n\n<ul>\n    <li><a routerLink=\"/apps/covid19-dashboard\">COVID-19 Dashboard</a></li>\n    <li><a routerLink=\"/apps/todo\">TODO app</a></li>\n\n</ul>","import { Component, OnInit } from \"@angular/core\";\nimport { INavData } from \"src/app/shared/dynamic-nav/dynamic-nav.component\";\n\n@Component({\n  selector: \"app-fullscreen\",\n  templateUrl: \"./fullscreen.component.html\",\n  styleUrls: [\"./fullscreen.component.scss\"]\n})\nexport class FullscreenComponent implements OnInit {\n  data: INavData = {\n    appName: \"Covid-19 Dashboard\",\n    navBackground: \"gradient-1\"\n  };\n\n  today = new Date();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<header>\n  <app-dynamic-nav [data]=\"data\"></app-dynamic-nav>\n</header>\n\n<section class=\"d-flex flex-column flex-fill\">\n  <section class=\"container-fluid\">\n    <router-outlet></router-outlet>\n  </section>\n</section>\n\n<footer class=\"bg-light py-3 w-100 d-flex justify-content-center\">\n  <span>Fullscreen Layout - {{ today | date }} </span>\n</footer>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FullscreenComponent } from \"./fullscreen.component\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { SharedModule } from \"src/app/shared/shared.module\";\nimport { C19DashboardComponent } from \"src/app/covid19-dashboard/c19-dashboard/c19-dashboard.component\";\nimport { FullscreenHomeComponent } from \"./fullscreen-home/fullscreen-home.component\";\nimport { CaseTableComponent } from \"src/app/covid19-dashboard/case-table/case-table.component\";\nimport { CaseStatisticComponent } from \"src/app/covid19-dashboard/case-statistic/case-statistic.component\";\nimport { TodoHomeComponent } from \"src/app/todo-app/todo-home/todo-home.component\";\nimport { TodoComponent } from \"src/app/todo-app/todo/todo.component\";\nimport { MaterialModule } from \"src/app/modules/material/material.module\";\nimport { FormsModule } from \"@angular/forms\";\n\n// for in memory api\nimport { HttpClientInMemoryWebApiModule } from \"angular-in-memory-web-api\";\nimport { AppData } from \"src/app/todo-app/app-data\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FullscreenComponent,\n    children: [\n      {\n        path: \"\",\n        component: FullscreenHomeComponent,\n      },\n      {\n        path: \"covid19-dashboard\",\n        component: C19DashboardComponent,\n      },\n      {\n        path: \"covid19-countries-table\",\n        component: CaseTableComponent,\n      },\n      {\n        path: \"todo\",\n        component: TodoHomeComponent,\n      },\n    ],\n  },\n];\n@NgModule({\n  declarations: [\n    FullscreenComponent,\n    FullscreenHomeComponent,\n    C19DashboardComponent,\n    CaseStatisticComponent,\n    CaseTableComponent,\n    TodoHomeComponent,\n    TodoComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    MaterialModule,\n    FormsModule,\n    // HttpClientInMemoryWebApiModule.forRoot(AppData), // toggle in memory\n  ],\n})\nexport class FullscreenModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { delay } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\nimport { DialogService } from \"../modules/dialog/dialog.service\";\nimport { ModalService } from \"../modules/modal/modal.service\";\n\n@Component({\n  selector: \"app-leetcode-reminder\",\n  templateUrl: \"./leetcode-reminder.component.html\",\n  styleUrls: [\"./leetcode-reminder.component.scss\"],\n})\nexport class LeetcodeReminderComponent implements OnInit {\n  email: string = \"rattanak22@gmail.com\";\n  result: string = \"\";\n\n  constructor(\n    private http: HttpClient,\n    private dialogService: DialogService,\n    private modalService: ModalService\n  ) {}\n\n  projectUrl = \"assets/json/projects.json\";\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    console.log(\"You submitted: \", this.email);\n    const subscribeURI =\n      environment.rootUrl +\n      environment.emailAPI.basePath +\n      environment.emailAPI.subscribe;\n\n    return this.http.post(subscribeURI, { email: this.email }).subscribe(\n      (data: any) => {\n        this.result = data.status;\n        this.email = \"\";\n      },\n      (error) => {\n        const data = {\n          title: \"Server Error\",\n          text:\n            \"We apology we were unable add your email to subscription at this time.\",\n        };\n        this.dialogService.openDialog(data);\n\n        // TODO use an toast might be better option\n      }\n    );\n  }\n\n  openModal() {\n    this.modalService.open();\n  }\n}\n","<h2>Leetcode Reminder</h2>\n\n<p><strong>Requirements MVP</strong></p>\n<ul>\n  <li>User input their email address and click send</li>\n  <li>User receives feedback after submission</li>\n  <li>User receive email with link to a Leetcode problem everyday</li>\n</ul>\n\n<div class=\"container mx-auto\">\n  <form (ngSubmit)=\"onSubmit()\" #emailForm=\"ngForm\">\n    <div class=\"form-row align-items-center\">\n      <div class=\"col-auto w-50\">\n        <label class=\"sr-only\" for=\"inlineFormInput\">Name</label>\n        <input type=\"text\" class=\"form-control mb-2\" placeholder=\"Enter your email\" name=\"email\" required\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" [(ngModel)]=\"email\" />\n      </div>\n      <div class=\"col-auto\">\n        <button type=\"submit\" class=\"btn btn-primary mb-2\" [disabled]=\"!emailForm.form.valid\">\n          Submit\n        </button>\n      </div>\n    </div>\n  </form>\n\n  <button mat-button class=\"btn btn-primary mb-2\" (click)=\"openModal()\">\n    Open Modal\n  </button>\n\n  <p class=\"text-success\">{{ result }}</p>\n\n  <h2 class=\"mt-5\">Sample Email</h2>\n  <div class=\"sample-email border p-3 mt-4\">\n    <h1 class=\"text-primary\">Question 1 - Two sum</h1>\n    <p>Given an array of integers, check whether there are two numbers...</p>\n    <a href=\"\">View Question on Leetcode</a>\n  </div>\n</div>","import { NgModule } from \"@angular/core\";\nimport { DialogComponent } from \"./dialog/dialog.component\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MaterialModule } from \"../material/material.module\";\n// dialog module that is reuseable\n\n@NgModule({\n  declarations: [DialogComponent],\n  imports: [MatButtonModule],\n  exports: [],\n})\nexport class DialogModule {}\n","import { Injectable } from \"@angular/core\";\n\n// Components\nimport { DialogComponent } from \"./dialog/dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DialogService {\n  constructor(public dialog: MatDialog) {}\n\n  openDialog(data): void {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      width: \"30%\",\n      data: data,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"close dialog result: \", result);\n    });\n  }\n  open(): void {}\n\n  close(): void {}\n}\n","import { Component, OnInit, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-dialog\",\n  templateUrl: \"./dialog.component.html\",\n  styleUrls: [\"./dialog.component.scss\"],\n})\nexport class DialogComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<DialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit(): void {}\n\n  onNoClick(result): void {\n    this.dialogRef.close(result);\n  }\n}\n","<h1 mat-dialog-title>{{ data.title }}</h1>\n<div mat-dialog-content>\n    <p>{{ data.text }}</p>\n</div>\n<hr />\n<div mat-dialog-actions class=\"d-flex justify-content-between\">\n    <a (click)=\"onNoClick(null)\">Cancel</a>\n    <button mat-raised-button color=\"primary\" mat-dialog-close=\"OK\">Ok</button>\n</div>","import { NgModule } from \"@angular/core\";\n\n// material modules\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\n\nconst materialModules = [\n  MatTableModule,\n  MatFormFieldModule,\n  MatPaginatorModule,\n  MatInputModule,\n  MatSortModule,\n  MatSelectModule,\n  MatDialogModule,\n  MatButtonModule,\n  MatIconModule,\n  MatSidenavModule,\n  MatCheckboxModule,\n];\n\n@NgModule({\n  declarations: [],\n  imports: [...materialModules],\n  exports: [...materialModules],\n})\nexport class MaterialModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { ModalService } from \"./modal.service\";\n\n@Component({\n  selector: \"app-modal\",\n  templateUrl: \"./modal.component.html\",\n  styleUrls: [\"./modal.component.scss\"],\n})\nexport class ModalComponent implements OnInit {\n  display$: Observable<\"open\" | \"close\">;\n\n  constructor(private modalService: ModalService) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n  }\n\n  close() {\n    console.log(\"modal closes\");\n    this.modalService.close();\n  }\n}\n","<ng-container *ngIf=\"display$ | async as display\">\n    <section [class.open]=\"display === 'open'\" (click)=\"close()\">\n        <div (click)=\"$event.stopPropagation()\">\n            <button class=\"close\" type=\"button\" (click)=\"close()\">X</button>\n\n            <h1>Hello World</h1>\n        </div>\n\n        <div class=\"d-flex justify-content-between action-btns\">\n            <a (click)=\"close()\">Cancel</a>\n            <button mat-raised-button color=\"primary\">Ok</button>\n        </div>\n    </section>\n</ng-container>","// Dialog modal with no dependency on library, i.e Angular material dialog\n\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ModalService {\n  private display: BehaviorSubject<\"open\" | \"close\"> = new BehaviorSubject(\n    \"close\"\n  );\n\n  watch(): Observable<\"open\" | \"close\"> {\n    return this.display.asObservable();\n  }\n\n  open() {\n    this.display.next(\"open\");\n  }\n\n  close() {\n    this.display.next(\"close\");\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { delay } from 'rxjs/operators';\n\n@Component({\n  selector: \"app-projects\",\n  templateUrl: \"./projects.component.html\",\n  styleUrls: [\"./projects.component.scss\"]\n})\nexport class ProjectsComponent implements OnInit {\n  projectUrl = \"assets/json/projects.json\";\n  projects: any = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.getProjects().subscribe(projects => {\n      console.log(\"ProjectsComponent -> ngOnInit -> projects\", projects);\n      this.projects = projects;\n    });\n  }\n\n  getProjects() {\n    return this.http.get(this.projectUrl).pipe(delay(5000));\n  }\n}\n","<h2>List of Projects I have built</h2>\n\n<p><a routerLink=\"/leetcode-reminder\">Leetcode Reminder</a></p>\n<p><a routerLink=\"/song-lyrics\">Song Lyrics</a></p>\n<p><a routerLink=\"/algorithm-visualizer\">Algorithm Visualizer</a></p>\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nexport interface INavData {\n  appName: string;\n  navBackground: string;\n}\n@Component({\n  selector: \"app-dynamic-nav\",\n  templateUrl: \"./dynamic-nav.component.html\",\n  styleUrls: [\"./dynamic-nav.component.scss\"]\n})\nexport class DynamicNavComponent implements OnInit {\n  @Input() data: INavData;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<nav class=\"navbar navbar-dark navbar-expand-lg portfolio-navbar py-3\" [ngClass]=\"data.navBackground || 'gradient'\">\n  <div class=\"container d-flex flex-nowrap\">\n    <div>\n      <a class=\"navbar-brand logo\">{{ data.appName }}</a>\n    </div>\n    <div class=\"d-flex\" id=\"navbarNav\">\n      <ul class=\"nav ml-auto\">\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link active\" routerLink=\"/\">Home</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-introduction',\n  templateUrl: './introduction.component.html',\n  styleUrls: ['./introduction.component.scss']\n})\nexport class IntroductionComponent implements OnInit {\n\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"d-flex flex-column justify-content-center align-items-center\">\n  <section class=\"intro\">\n    <div class=\"avatar\"></div>\n    <div class=\"about-me\">\n      <p>\n        Hello! I am <strong>Rattanak Chea</strong>. I am a software engineer\n        developer. I have the passion for building full stack applications.\n      </p>\n    </div>\n  </section>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  ElementRef,\n  ChangeDetectorRef\n} from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { LoadingScreenService } from \"./loading-screen.service\";\nimport { debounceTime } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-loading-screen\",\n  templateUrl: \"./loading-screen.component.html\",\n  styleUrls: [\"./loading-screen.component.scss\"]\n})\nexport class LoadingScreenComponent implements AfterViewInit, OnDestroy {\n  debounceTime: number = 200;\n  loading: boolean = false;\n  loadingSubscription: Subscription;\n\n  constructor(\n    private loadingScreenService: LoadingScreenService,\n    private _elmRef: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngAfterViewInit(): void {\n    this._elmRef.nativeElement.style.display = \"none\";\n    this.loadingSubscription = this.loadingScreenService.loadingStatus\n      .pipe(debounceTime(this.debounceTime))\n      .subscribe((status: boolean) => {\n        this._elmRef.nativeElement.style.display = status ? \"block\" : \"none\";\n        this._changeDetectorRef.detectChanges();\n      });\n  }\n\n  ngOnDestroy() {\n    this.loadingSubscription.unsubscribe();\n  }\n}\n","<div class=\"loading-screen-wrapper\">\n  <div class=\"loading-screen-icon\">\n    <div class=\"blobs\">\n      <div class=\"blob-center\"></div>\n      <div class=\"blob\"></div>\n      <div class=\"blob\"></div>\n      <div class=\"blob\"></div>\n      <div class=\"blob\"></div>\n      <div class=\"blob\"></div>\n      <div class=\"blob\"></div>\n    </div>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n      <defs>\n        <filter id=\"goo\">\n          <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\" />\n          <feColorMatrix\n            in=\"blur\"\n            mode=\"matrix\"\n            values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\"\n            result=\"goo\"\n          />\n          <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n        </filter>\n      </defs>\n    </svg>\n  </div>\n</div>\n\nLoading now...\n","import { Injectable } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LoadingScreenService {\n  constructor() {}\n\n  private _loading: boolean = false;\n  loadingStatus: Subject<boolean> = new Subject();\n\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  set loading(value) {\n    console.log(\"set loading status\");\n    this._loading = value;\n    this.loadingStatus.next(value);\n  }\n\n  startLoading() {\n    this.loading = true;\n  }\n\n  stopLoading() {\n    this.loading = false;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-navigation\",\n  templateUrl: \"./navigation.component.html\",\n  styleUrls: [\"./navigation.component.scss\"]\n})\nexport class NavigationComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<nav class=\"navbar navbar-dark navbar-expand-lg portfolio-navbar py-3\">\n  <div class=\"container d-flex flex-nowrap\">\n    <div>\n      <a class=\"logo btn btn-primary\" routerLink=\"/\">Rattanak Chea</a>\n    </div>\n    <div class=\"d-flex\" id=\"navbarNav\">\n      <ul class=\"nav ml-auto\">\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link active\" routerLink=\"\">Home</a>\n        </li>\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link\" routerLink=\"/projects\">Projects</a>\n        </li>\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link\" routerLink=\"/apps\">Apps</a>\n        </li>\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link\" routerLink=\"/playground\">Playground</a>\n        </li>\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link\" href=\"/bootstrap\">Bootstrap UI</a>\n        </li>\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link\" href=\"\">Dark Theme</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page404',\n  templateUrl: './page404.component.html',\n  styleUrls: ['./page404.component.scss']\n})\nexport class Page404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"wrapper d-flex flex-column justify-content-between\">\n  <app-navigation></app-navigation>\n\n  <section class=\"container content d-flex flex-fill\" role=\"main\">\n    <h2>404 <span class=\"text-secondary\">| Page Not Found</span></h2>\n    <h4>\n      Would you like to visit the\n      <span class=\"text-secondary\">home page</span> instead?\n    </h4>\n  </section>\n\n  <footer class=\"gradient py-3 w-100 d-flex justify-content-center\">\n    <span>Default Layout</span>\n  </footer>\n</section>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { NavigationComponent } from \"./navigation/navigation.component\";\nimport { RouterModule } from \"@angular/router\";\nimport { Page404Component } from \"./page404/page404.component\";\nimport { LoadingScreenComponent } from \"./loading-screen/loading-screen.component\";\nimport { DynamicNavComponent } from \"./dynamic-nav/dynamic-nav.component\";\nimport { IntroductionComponent } from \"./introduction/introduction.component\";\n\nconst commonComponents = [\n  NavigationComponent,\n  IntroductionComponent,\n  Page404Component,\n  LoadingScreenComponent,\n  DynamicNavComponent,\n];\n@NgModule({\n  declarations: [...commonComponents],\n  imports: [CommonModule, RouterModule],\n  exports: [RouterModule, ...commonComponents],\n})\nexport class SharedModule {}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { ITodoFilter } from \"./todo.model\";\nimport { map, shareReplay } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FilterStoreService {\n  // class members\n\n  // initial state\n  private _filterStore = new BehaviorSubject<ITodoFilter>({\n    search: \"\",\n    isCompleted: null,\n  });\n  // Expose the observable$ part of the _todos subject (read only stream)\n  filter$ = this._filterStore.asObservable();\n\n  get todoFilter(): ITodoFilter {\n    return this._filterStore.getValue(); //or just _filterStore.value, ?\n  }\n\n  setState(val: ITodoFilter) {\n    this._filterStore.next(val);\n  }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { TodosStoreService } from \"../todos-store.service\";\nimport { FilterStoreService } from \"../filter-store.service\";\nimport { ITodoFilter, Todo } from \"../todo.model\";\nimport { combineLatest, Observable, of } from \"rxjs\";\nimport { debounceTime, map, switchMap } from \"rxjs/operators\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-todo-home\",\n  templateUrl: \"./todo-home.component.html\",\n  styleUrls: [\"./todo-home.component.scss\"],\n})\nexport class TodoHomeComponent implements OnInit {\n  @ViewChild(\"todoTitleInput\") todoTitleInput: ElementRef;\n\n  // optimization, rerenders only todos that change instead of the entire list of todos\n  todosTrackFn = (i, todo) => todo.id;\n\n  todosList$: Observable<Todo[]>; // all todos\n  todosListFiltered$: Observable<Todo[]>; // todos list with filter\n\n  todoFilter: ITodoFilter = {\n    search: \"\",\n    isCompleted: null,\n  };\n  filterAction$: Observable<ITodoFilter>;\n  queryParameter$: Observable<Params>;\n\n  constructor(\n    public todosStoreService: TodosStoreService,\n    private filterStoreService: FilterStoreService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.todosList$ = this.todosStoreService.todos$;\n    this.filterAction$ = this.filterStoreService.filter$;\n    this.queryParameter$ = this.route.queryParams.pipe(debounceTime(300));\n\n    // take current parameter\n    this.todoFilter = { ...this.route.snapshot.queryParams };\n\n    // This is awesome\n    // this.todosListFiltered$ = combine$.pipe(\n    //   switchMap(([todosList, filter]) => {\n    //     console.log(\"TodoHomeComponent -> combine -> value\", todosList);\n    //     console.log(\"TodoHomeComponent -> combine -> filter\", filter);\n\n    //     let filtered = todosList.filter(\n    //       (item: Todo) => item.title.indexOf(filter.search) !== -1\n    //     );\n\n    //     // Filter Status\n    //     if (filter.isCompleted !== null) {\n    //       filtered = filtered.filter(\n    //         (item) => item.isCompleted === filter.isCompleted\n    //       );\n    //     }\n\n    //     return of(filtered);\n    //   })\n    // );\n\n    // A simpler version using just Map\n    this.todosListFiltered$ = combineLatest(\n      [this.todosList$, this.queryParameter$]\n      // this.filterStoreService.filter$,\n    ).pipe(\n      map(([todosList, query]) => {\n        console.log(\"TodoHomeComponent -> ngOnInit -> filter\", query);\n\n        this.updateFilterState(query);\n\n        let filtered = todosList;\n        if (query.search) {\n          filtered = todosList.filter(\n            (item: Todo) =>\n              item.title.toLowerCase().indexOf(query.search.toLowerCase()) !==\n              -1\n          );\n        }\n\n        // Filter Status\n        if (\"isCompleted\" in query) {\n          if (query.isCompleted === \"\") return filtered;\n          filtered = filtered.filter(\n            (item) => item.isCompleted === (query.isCompleted == \"true\")\n          );\n        }\n        return filtered;\n      })\n    );\n  }\n\n  onAddTodo(title: string) {\n    this.todosStoreService.addTodo(title);\n    this.todoTitleInput.nativeElement.value = \"\";\n  }\n\n  onChange(event) {\n    console.log(\"change: \", this.todoFilter);\n    let newState = { ...this.todoFilter };\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { ...newState },\n    });\n  }\n\n  updateFilterState(state) {\n    // let newState = { ...this.todoFilter };\n    // this.todoFilter = state;\n    this.filterStoreService.setState(state);\n  }\n}\n","<section class=\"container\">\n    <h1 class=\"my-3\">Todos App</h1>\n\n\n    <section class=\"bg-secondary p-4\">\n        <h2>Filter</h2>\n        {{ todoFilter | json }}\n        <div class=\"row d-flex align-items-baseline\">\n            <div class=\"col-auto\">\n                <input type=\"text\" class=\"form-control\" id=\"search\" placeholder=\"Search todo\"\n                    [(ngModel)]=\"todoFilter.search\" (ngModelChange)=\"onChange($event)\">\n                <!-- ngModelChange must be after ngModel, to make it fire later -->\n            </div>\n\n            <div class=\"col-auto\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Status</mat-label>\n                    <mat-select [(ngModel)]=\"todoFilter.isCompleted\" (ngModelChange)=\"onChange($event)\">\n                        <mat-option value=\"\">\n                            All\n                        </mat-option>\n                        <mat-option [value]=\"true\">\n                            Complete\n                        </mat-option>\n                        <mat-option [value]=\"false\">\n                            Incomplete\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n\n        </div>\n    </section>\n\n\n    <div class=\"row\">\n        <div class=\"col-auto\">\n            <input type=\"text\" class=\"form-control\" id=\"todo\" placeholder=\"What are you doing?\"\n                (keyup.enter)=\"onAddTodo(todoTitleInput.value)\" #todoTitleInput>\n        </div>\n        <div class=\"col-auto\">\n            <button class=\"btn btn-primary\" (click)=\"onAddTodo(todoTitleInput.value)\">Add</button>\n        </div>\n    </div>\n\n\n    <!-- All Todos -->\n    <div class=\"row my-3\">\n        <div class=\"col-12 card\">\n            <h2>All todos:</h2>\n            <ng-container *ngFor=\"let todo of todosListFiltered$ | async; trackBy: todosTrackFn\">\n                <app-todo [todo]=\"todo\" (complete)=\"todosStoreService.setCompleted(todo.id, $event)\"\n                    (remove)=\"todosStoreService.removeTodo($event)\">\n                </app-todo>\n            </ng-container>\n        </div>\n    </div>\n\n    <div class=\"row my-3\">\n        <div class=\"col-12 col-sm-5 uncompleted card\">\n\n            <h2>Uncompleted todos:</h2>\n            <ng-container *ngFor=\"let todo of todosStoreService.uncompletedTodos$ | async; trackBy: todosTrackFn\">\n                <app-todo [todo]=\"todo\" (complete)=\"todosStoreService.setCompleted(todo.id, $event)\"\n                    (remove)=\"todosStoreService.removeTodo($event)\">\n                </app-todo>\n            </ng-container>\n        </div>\n\n        <div class=\"col-12 col-sm-5 offset-sm-2 completed card\">\n            <h2>Completed todos:</h2>\n            <app-todo *ngFor=\"let todo of todosStoreService.completedTodos$ | async; trackBy: todosTrackFn\"\n                [todo]=\"todo\" (complete)=\"todosStoreService.setCompleted(todo.id, $event)\"\n                (remove)=\"todosStoreService.removeTodo($event)\">\n            </app-todo>\n        </div>\n    </div>\n\n\n\n\n</section>","export interface Todo {\n  id?: number;\n  title: string;\n  isCompleted: boolean;\n}\n\nexport function uuid(): number {\n  return (Math.random() * 16) | 0;\n}\n\nexport interface ITodoFilter {\n  search?: string;\n  isCompleted?: string;\n}\n\nexport class TodoData {\n  static todos: Todo[] = [\n    {\n      id: 1,\n      title: \"Todo In Memory\",\n      isCompleted: false,\n    },\n  ];\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from \"@angular/core\";\nimport { Todo } from \"../todo.model\";\n\n@Component({\n  selector: \"app-todo\",\n  templateUrl: \"./todo.component.html\",\n  styleUrls: [\"./todo.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TodoComponent implements OnInit {\n  @Input() todo: Todo;\n  @Output() complete = new EventEmitter<boolean>();\n  @Output() remove = new EventEmitter<any>();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"form-check d-flex align-items-center justify-content-between my-2\">\n    <div>\n        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" [checked]=\"todo.isCompleted\"\n            (change)=\"complete.emit($event.target.checked)\">\n        <label class=\"form-check-label\" for=\"flexCheckDefault\">\n            <span [ngClass]=\"{'completed': todo.isCompleted}\" class=\"todo-title\">\n                {{todo.title}}\n            </span>\n        </label>\n\n        <!-- <mat-checkbox class=\"example-margin\" [checked]=\"todo.isCompleted\" (change)=\"complete.emit(todo.isCompleted)\">\n            <h3 [ngClass]=\"{'completed': todo.isCompleted}\" class=\"todo-title\">\n                {{todo.title}}\n            </h3>\n        </mat-checkbox> -->\n    </div>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=remove.emit(todo.id)>Remove</button>\n</div>","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Todo } from \"./todo.model\";\nimport { ApiHttpService } from \"../services/api-http.service\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TodosApiService {\n  private inMemoryApi: boolean = false;\n\n  // Rattanak's mock api endpoint\n  private apiBaseUrl = \"https://5f7645a4fdffe3001637facc.mockapi.io/todos/todo\";\n\n  constructor(private http: HttpClient) {\n    if (this.inMemoryApi) {\n      this.apiBaseUrl = \"/api/todos\";\n    }\n  }\n\n  get() {\n    return this.http.get<Todo[]>(`${this.apiBaseUrl}`);\n  }\n\n  create(todo: Todo) {\n    return this.http.post<Todo>(`${this.apiBaseUrl}`, todo);\n  }\n\n  remove(id) {\n    return this.http.delete(`${this.apiBaseUrl}/${id}`);\n  }\n\n  setCompleted(id: number, isCompleted: boolean) {\n    return this.http.put<Todo>(`${this.apiBaseUrl}/${id}`, {\n      isCompleted,\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, combineLatest, of } from \"rxjs\";\nimport { Todo, uuid } from \"./todo.model\";\nimport { map, shareReplay, switchMap } from \"rxjs/operators\";\nimport { TodosApiService } from \"./todos-api.service\";\nimport { FilterStoreService } from \"./filter-store.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TodosStoreService {\n  // - We set the initial state in BehaviorSubject's constructor\n  // - Nobody outside the Store should have access to the BehaviorSubject\n  //   because it has the write rights\n  // - Writing to state should be handled by specialized Store methods (ex: addTodo, removeTodo, etc)\n  // - Create one BehaviorSubject per store entity, for example if you have TodoGroups\n  //   create a new BehaviorSubject for it, as well as the observable$, and getters/setters\n  private readonly _todosStore = new BehaviorSubject<Todo[]>([]);\n\n  // Expose the observable$ part of the _todosStore subject (read only stream)\n  readonly todos$ = this._todosStore.asObservable();\n\n  // we'll compose the todos$ observable with map operator to create a stream of only completed todos\n  readonly completedTodos$ = this.todos$.pipe(\n    map((todos: Todo[]) => todos.filter((todo) => todo.isCompleted))\n  );\n\n  readonly uncompletedTodos$ = this.todos$.pipe(\n    map((todos) => todos.filter((todo) => !todo.isCompleted))\n  );\n\n  constructor(private todosService: TodosApiService) {\n    this.fetchAll();\n  }\n\n  async fetchAll() {\n    let todos = await this.todosService.get().toPromise();\n    this.setState(todos);\n  }\n\n  // the getter will return the last value emitted in _todosStore subject\n  get todos(): Todo[] {\n    return this._todosStore.getValue();\n  }\n\n  // assigning a value to this.todos will push it onto the observable\n  // and down to all of its subsribers (ex: this.todos = [])\n  set todos(val: Todo[]) {\n    this._todosStore.next(val);\n  }\n\n  setState(val: Todo[]) {\n    this._todosStore.next(val);\n  }\n\n  async addTodo(title: string) {\n    if (title && title.length) {\n      // This is called an optimistic update\n      // updating the record locally before actually getting a response from the server\n      // this way, the interface seems blazing fast to the enduser\n      // and we just assume that the server will return success responses anyway most of the time.\n      // if server returns an error, we just revert back the changes in the catch statement\n\n      const tmpId = uuid();\n      const tmpTodo = { id: tmpId, title, isCompleted: false };\n\n      this.todos = [...this.todos, tmpTodo];\n\n      try {\n        const todo = await this.todosService\n          .create({ title, isCompleted: false })\n          .toPromise();\n\n        // we swap the local tmp record with the record from the server (id must be updated)\n        const index = this.todos.indexOf(\n          this.todos.find((t) => t.id === tmpId)\n        );\n        this.todos[index] = {\n          ...todo,\n        };\n        this.todos = [...this.todos];\n      } catch (e) {\n        // is server sends back an error, we revert the changes\n        console.error(e);\n        this.removeTodo(tmpId, false);\n      }\n    }\n  }\n\n  async removeTodo(id: number, serverRemove = true) {\n    // optimistic update\n    const todo = this.todos.find((t) => t.id === id);\n    this.todos = this.todos.filter((todo) => todo.id !== id);\n\n    if (serverRemove) {\n      try {\n        await this.todosService.remove(id).toPromise();\n      } catch (e) {\n        console.error(e);\n        this.todos = [...this.todos, todo];\n      }\n    }\n  }\n\n  async setCompleted(id: number, isCompleted: boolean) {\n    let todo = this.todos.find((todo) => todo.id === id);\n\n    if (todo) {\n      // optimistic update\n      const index = this.todos.indexOf(todo);\n      this.todos[index] = {\n        ...todo,\n        isCompleted,\n      };\n      this.todos = [...this.todos];\n\n      try {\n        await this.todosService.setCompleted(id, isCompleted).toPromise();\n      } catch (e) {\n        console.error(e);\n        this.todos[index] = {\n          ...todo,\n          isCompleted: !isCompleted,\n        };\n      }\n    }\n  }\n}\n","/* common environment for\n/ -common API endpoints\n/\n*/\n\nexport const commonEnvironment = {\n  emailAPI: {\n    basePath: \"email/\",\n    subscribe: \"subscribe\"\n  },\n  HEADER: {\n    AUTHORIZATION: \"Authorization\"\n  }\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { commonEnvironment } from './environment.common';\n\nconst PORT = 3000;\n\nexport const environment = {\n  production: false,\n  rootUrl: `http://localhost:${PORT}/`,\n  ...commonEnvironment\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}