{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/covid19-dashboard/c19-dashboard/c19-dashboard.component.ts","webpack:///src/app/covid19-dashboard/c19-dashboard/c19-dashboard.component.html","webpack:///src/app/covid19-dashboard/case-statistic/case-statistic.component.ts","webpack:///src/app/covid19-dashboard/case-statistic/case-statistic.component.html","webpack:///src/app/covid19-dashboard/case-table/case-table.component.ts","webpack:///src/app/covid19-dashboard/case-table/case-table.component.html","webpack:///src/app/covid19-dashboard/services/ainzine/c19.service.ts","webpack:///src/app/interceptors/loading.interceptor.ts","webpack:///src/app/layouts/fullscreen/fullscreen-home/fullscreen-home.component.ts","webpack:///src/app/layouts/fullscreen/fullscreen-home/fullscreen-home.component.html","webpack:///src/app/layouts/fullscreen/fullscreen.component.ts","webpack:///src/app/layouts/fullscreen/fullscreen.component.html","webpack:///src/app/layouts/fullscreen/fullscreen.module.ts","webpack:///src/app/leetcode-reminder/leetcode-reminder.component.ts","webpack:///src/app/leetcode-reminder/leetcode-reminder.component.html","webpack:///src/app/modules/dialog/dialog.module.ts","webpack:///src/app/modules/dialog/dialog.service.ts","webpack:///src/app/modules/dialog/dialog/dialog.component.ts","webpack:///src/app/modules/dialog/dialog/dialog.component.html","webpack:///src/app/modules/material/material.module.ts","webpack:///src/app/modules/modal/modal.component.ts","webpack:///src/app/modules/modal/modal.component.html","webpack:///src/app/modules/modal/modal.service.ts","webpack:///src/app/projects/projects.component.ts","webpack:///src/app/projects/projects.component.html","webpack:///src/app/shared/dynamic-nav/dynamic-nav.component.ts","webpack:///src/app/shared/dynamic-nav/dynamic-nav.component.html","webpack:///src/app/shared/introduction/introduction.component.ts","webpack:///src/app/shared/introduction/introduction.component.html","webpack:///src/app/shared/loading-screen/loading-screen.component.ts","webpack:///src/app/shared/loading-screen/loading-screen.component.html","webpack:///src/app/shared/loading-screen/loading-screen.service.ts","webpack:///src/app/shared/navigation/navigation.component.ts","webpack:///src/app/shared/navigation/navigation.component.html","webpack:///src/app/shared/page404/page404.component.ts","webpack:///src/app/shared/page404/page404.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/todo-app/filter-store.service.ts","webpack:///src/app/todo-app/todo-home/todo-home.component.ts","webpack:///src/app/todo-app/todo-home/todo-home.component.html","webpack:///src/app/todo-app/todo.model.ts","webpack:///src/app/todo-app/todo/todo.component.ts","webpack:///src/app/todo-app/todo/todo.component.html","webpack:///src/app/todo-app/todos-api.service.ts","webpack:///src/app/todo-app/todos-store.service.ts","webpack:///src/environments/environment.common.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","DefaultModule","PlaygroundModule","FullscreenModule","BootstrapUIModule","RobinhoodLibModule","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","C19DashboardComponent","c19Service","selectedCountryCode","selectedMarker","country","markers","getBrief","subscribe","data","lastUpdatedAt","Date","worldStat","getLatest","getTimeSeriesByCountry","marker","countryCode","countrycode","iso2","iso3","timeseries","times","datesArray","Object","countryStat","length","console","log","CaseStatisticComponent","stat","CaseTableComponent","displayedColumns","sort","a","b","confirmed","map","item","index","dataSource","paginator","pageSize","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","applyFilter","BASE_URL","API_BASE_URL","API_ENDPOINTS","brief","latest","timeSeries","C19Service","httpClient","get","pipe","response","location","countryregion","provincestate","confirmedStr","deaths","recovered","providedIn","LoadingInterceptor","loadingScreenService","activeRequests","request","next","startLoading","handle","stopLoading","loadingInterceptorProviders","provide","useClass","multi","FullscreenHomeComponent","FullscreenComponent","appName","navBackground","today","children","forChild","LeetcodeReminderComponent","http","dialogService","modalService","email","result","projectUrl","subscribeURI","rootUrl","emailAPI","basePath","post","status","error","text","openDialog","open","onSubmit","openModal","DialogModule","DialogService","dialog","dialogRef","width","afterClosed","DialogComponent","close","onNoClick","materialModules","MaterialModule","$event","stopPropagation","ModalComponent","display$","watch","ModalService","display","asObservable","ProjectsComponent","projects","getProjects","DynamicNavComponent","IntroductionComponent","LoadingScreenComponent","_elmRef","_changeDetectorRef","debounceTime","loading","nativeElement","style","loadingSubscription","loadingStatus","detectChanges","unsubscribe","LoadingScreenService","_loading","NavigationComponent","Page404Component","commonComponents","SharedModule","FilterStoreService","_filterStore","search","isCompleted","filter$","val","getValue","todosStoreService","TodoHomeComponent","filterStoreService","route","router","todosTrackFn","i","todo","todoFilter","todosList$","todos$","filterAction$","queryParameter$","queryParams","snapshot","todosListFiltered$","todosList","query","updateFilterState","filtered","indexOf","addTodo","todoTitleInput","newState","navigate","relativeTo","state","setState","onChange","onAddTodo","uuid","Math","random","TodoData","todos","TodoComponent","complete","remove","changeDetection","OnPush","TodosApiService","inMemoryApi","apiBaseUrl","put","TodosStoreService","todosService","_todosStore","completedTodos$","uncompletedTodos$","fetchAll","toPromise","tmpId","tmpTodo","create","find","t","removeTodo","serverRemove","setCompleted","commonEnvironment","HEADER","AUTHORIZATION","PORT","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,eAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,8BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,oBAAY,EAAE;AAAA,iBACZ;AAAA;AAAA;AAAA;AAAA,0DAA2CV,IAA3C,CAAgD,UAACW,CAAD;AAAA,mBAAOA,CAAC,CAACC,aAAT;AAAA,WAAhD,CADY;AAAA;AAFhB,OADqB,EAMrB;AACEH,YAAI,EAAE,YADR;AAEEC,oBAAY,EAAE;AAAA,iBACZ;AAAA;AAAA;AAAA;AAAA,0DAA2CV,IAA3C,CACE,UAACW,CAAD;AAAA,mBAAOA,CAAC,CAACE,gBAAT;AAAA,WADF,CADY;AAAA;AAFhB,OANqB,EAarB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEJ,YAAI,EAAE,MADR;AAEEC,oBAAY,EAAE;AAAA,iBACZ;AAAA;AAAA,gEAAiDV,IAAjD,CACE,UAACW,CAAD;AAAA,mBAAOA,CAAC,CAACG,gBAAT;AAAA,WADF,CADY;AAAA;AAFhB,OAzBqB,EAgCrB;AACEL,YAAI,EAAE,WADR;AAEEC,oBAAY,EAAE;AAAA,iBACZ;AAAA;AAAA;AAAA;AAAA,4DAA6CV,IAA7C,CACE,UAACW,CAAD;AAAA,mBAAOA,CAAC,CAACI,iBAAT;AAAA,WADF,CADY;AAAA;AAFhB,OAhCqB,EAuCrB;AACEN,YAAI,EAAE,WADR;AAEEC,oBAAY,EAAE;AAAA,iBACZ;AAAA;AAAA;AAAA;AAAA,+DAAsDV,IAAtD,CACE,UAACW,CAAD;AAAA,mBAAOA,CAAC,CAACK,kBAAT;AAAA,WADF,CADY;AAAA;AAFhB,OAvCqB,EA8CrB;AACEP,YAAI,EAAE,IADR;AAEEQ,iBAAS,EAAE;AAFb,OA9CqB,CAAvB;;UAwDaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAaC,OAAb,CAAqBX,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAhBU,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACRE,mBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBX,MAArB,CAAD,CADD;AAERF,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAImB,U;;;;;;;;;;;;;;;;;;AC5D7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOae,Y,GALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,iBAAR;AACD,O;;;yBAFYD,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACPzB;;AAEA;;AAEA;;;;;;;;;wEDGaA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTE,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,oD,CAYA;;;UA2BaC,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAHT,CAAC,6FAAD,C;AAA6B,kBAZ/B,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,uFANO,EAOP,6FAPO,EAQP,iFARO,EASP,2EATO,CAY+B,EAD9B,kEAC8B,EADhB,0DACgB,EADH,uEACG;;;;4HAG7BA,S,EAAS;AAAA,yBApBlB,2DAoBkB,EAnBlB,8EAmBkB,EAlBlB,wGAkBkB,EAjBlB,8EAiBkB;AAjBJ,oBAGd,uEAHc,EAId,oEAJc,EAKd,qEALc,EAMd,0DANc,EAOd,kEAPc,EAQd,uFARc,EASd,6FATc,EAUd,iFAVc,EAWd,2EAXc,CAiBI;AANN,oBAEJ,kEAFI,EAEU,0DAFV,EAEuB,uEAFvB;AAMM,S;AAJ8B,O;;;;;wEAIvCA,S,EAAS;gBAtBrB,sDAsBqB;iBAtBZ;AACRC,wBAAY,EAAE,CACZ,2DADY,EAEZ,8EAFY,EAGZ,wGAHY,EAIZ,8EAJY,CADN;AAORP,mBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,uFANO,EAOP,6FAPO,EAQP,iFARO,EASP,2EATO,CAPD;AAkBRd,mBAAO,EAAE,CAAC,kEAAD,EAAe,0DAAf,EAA4B,uEAA5B,CAlBD;AAmBRsB,qBAAS,EAAE,CAAC,6FAAD,CAnBH;AAoBRC,qBAAS,EAAE,CAAC,2DAAD;AApBH,W;AAsBY,U;;;;;;;;;;;;;;;;;;ACvCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmBY;;AAAkD;;AAEhD;;;;;;AAFoC;;AAAY;;AAAA;;;;UDNjDC,qB;AACX,uCAAoBC,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA,CAAwB,CAE5C;AACA;;AAEA,eAAAC,mBAAA,GAAsB,IAAtB;AAEA,eAAAC,cAAA,GAAiB;AACfC,mBAAO,EAAE;AADM,WAAjB;AAMA,eAAAC,OAAA,GAAU,EAAV;AAb8C;;;;qCAiBtC;AAAA;;AACN,iBAAKJ,UAAL,CAAgBK,QAAhB,GAA2BC,SAA3B,CAAqC,UAACC,IAAD,EAAsB;AACzD,mBAAI,CAACC,aAAL,GAAqB,IAAIC,IAAJ,EAArB;AACA,mBAAI,CAACC,SAAL,GAAiBH,IAAjB;AACD,aAHD;AAKA,iBAAKP,UAAL,CAAgBW,SAAhB,GAA4BL,SAA5B,CAAsC,UAAAC,IAAI,EAAI;AAC5C,mBAAI,CAACH,OAAL,GAAeG,IAAf;AACD,aAFD;AAIA,iBAAKK,sBAAL;AACD;;;iDAEsBC,M,EAAS;AAAA;;AAC9B,gBAAIC,WAAW,GAAG,IAAlB;;AACA,gBAAID,MAAJ,EAAY;AACVC,yBAAW,GAAGD,MAAM,CAACE,WAAP,CAAmBC,IAAnB,IAA2BH,MAAM,CAACE,WAAP,CAAmBE,IAA5D;AACD;;AAED,iBAAKjB,UAAL,CACGY,sBADH,CAC0BE,WAD1B,EAEGR,SAFH,CAEa,UAACC,IAAD,EAAe;AACxB,kBAAIA,IAAI,IAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQW,UAApB,EAAgC;AAC9B,oBAAMC,KAAK,GAAGZ,IAAI,CAAC,CAAD,CAAJ,CAAQW,UAAtB;AACA,oBAAIE,UAAU,GAAGC,MAAM,CAAChD,IAAP,CAAY8C,KAAZ,CAAjB;;AACA,oBAAIC,UAAJ,EAAgB;AACd,wBAAI,CAACE,WAAL,GACEf,IAAI,CAAC,CAAD,CAAJ,CAAQW,UAAR,CAAmBE,UAAU,CAACA,UAAU,CAACG,MAAX,GAAoB,CAArB,CAA7B,CADF;AAEAC,yBAAO,CAACC,GAAR,CACE,uDADF,EAEE,MAAI,CAACH,WAFP;AAID;AACF;AACF,aAfH;AAgBD;;;;;;;yBArDUvB,qB,EAAqB,yI;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA,iB;AAAA,e;AAAA,ge;AAAA;AAAA;ACblC;;AACE;;AACE;;AAAgE;;AAAS;;AACzE;;AAAsE;;AAAU;;AAClF;;AACA;;AAA6B;;;;AAAoD;;AACjF;;AACF;;AACA;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAa;;AAAS;;AAAiC;;AACzD;;AACA;;AACE;;AAAW;;AAAgB;;AAC3B;;AAAY;AAAA;AAAA,eAA0B,iBAA1B,EAA0B;AAAA,qBAAoB,IAAAa,sBAAA,oBAApB;AAA0D,aAApF;;AACV;;AAGF;;AACF;;AACF;;AAEA;;AACF;;AAEA;;AACE;;AAAI;;AAAa;;AACjB;;AACF;;AACF;;AACF;;;;AA7B+B;;AAAA;;AASC;;AAAA;;AAIV;;AAAA;;AACE;;AAAA;;AAOE;;AAAA;;AAKA;;AAAA;;;;;;;;wEDlBbb,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTP,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;;;AEblC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACE;;AAIE;;AACE;;AACF;;AACA;;AACE;;AAA4B;;AAAoB;;AAChD;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAA4B;;AAAiB;;AAC7C;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACA;;AAIE;;AACE;;AACF;;AACA;;AACE;;AACE;;;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;;;;;AA9CkC;;AAAA;;AAWA;;AAAA;;AAY1B;;AAAA;;AAgBA;;AAAA;;;;UDxCKgC,sB;AAGX,0CAAc;AAAA;AAAE;;;;qCAER,CAAW;;;;;;;yBALRA,sB;AAAsB,O;;;cAAtBA,sB;AAAsB,2C;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,yW;AAAA;AAAA;ACRnC;;;;AAAc;;;;;;;;;;wEDQDA,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTlC,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKwB,U;;;AACxBiC,cAAI,EAAE,CAAF;kBAAZ;AAAY,WAAE;;;;;;;;;;;;;;;;;;;AETjB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC+BQ;;AAAsD;;AAAI;;;;;;AAC1D;;AAAmC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAInC;;AAAsD;;AAAO;;;;;;AAC7D;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAKF;;AAAsD;;AAAS;;;;;;AAC/D;;AAAmC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAInC;;AAAsD;;AAAK;;;;;;AAC3D;;AAAmC;;AAAgB;;;;;;AAAhB;;AAAA;;;;;;AAInC;;AAAsD;;AAAS;;;;;;AAC/D;;AAAmC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAGrC;;;;;;AACA;;;;;;;;UD/COC,kB;AAaX,oCAAoB5B,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AAXpB,eAAA6B,gBAAA,GAA6B,CAC3B,OAD2B,EAE3B,SAF2B,EAG3B,WAH2B,EAI3B,QAJ2B,EAK3B,WAL2B,CAA7B;AAW8C;;;;qCAEnC,CAAE;;;4CAEK;AAAA;;AAChB,iBAAK7B,UAAL,CAAgBW,SAAhB,GAA4BL,SAA5B,CAAsC,UAACC,IAAD,EAAsB;AAC1DA,kBAAI,CAACuB,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAClB,uBAAOA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SAAvB;AACD,eAFD;AAIA1B,kBAAI,CAAC2B,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACxBD,oBAAI,CAACC,KAAL,GAAaA,KAAK,GAAG,CAArB;AACA,uBAAOD,IAAP;AACD,eAHD,EAL0D,CAU1D;;AACA,oBAAI,CAACE,UAAL,GAAkB,IAAI,0EAAJ,CAAuB9B,IAAvB,CAAlB;AACAiB,qBAAO,CAACC,GAAR,CACE,mDADF,EAEE,MAAI,CAACY,UAFP;AAKA,oBAAI,CAACA,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;AACA,oBAAI,CAACD,UAAL,CAAgBC,SAAhB,CAA0BC,QAA1B,GAAqC,EAArC;AACA,oBAAI,CAACF,UAAL,CAAgBP,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACA,oBAAI,CAACtB,aAAL,GAAqB,IAAIC,IAAJ,EAArB;AACD,aArBD;AAsBD;;;sCAEW+B,K,EAAc;AACxB,gBAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,iBAAKN,UAAL,CAAgBO,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;;AACA,gBAAI,KAAKT,UAAL,IAAmB,KAAKA,UAAL,CAAgBC,SAAvC,EAAkD;AAChD,mBAAKD,UAAL,CAAgBC,SAAhB,CAA0BS,SAA1B;AACD;AACF;;;;;;;yBAhDUnB,kB,EAAkB,yI;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA;AAAA;4EAUlB,wE,EAAc,I;;4EACd,8D,EAAS,I;;;;;;;;;;;;;;;ACtBtB;;AACE;;AACE;;AACG;;AAAS;;AAEZ;;AACG;;AAAU;;AAEf;;AACA;;AACG;;;;AAAoD;;AAEvD;;AACA;;AAAmB;;AAAO;;AAC5B;;AACA;;AACA;;AAEE;;AACE;;AAAW;;AAAM;;AACjB;;AAEE;AAAA,qBAAS,IAAAoB,WAAA,QAAT;AAA4B,aAA5B;;AAFF;;AAKF;;AAEA;;AACE;;AAEE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACA;;AACF;;AACF;;AACA;;AACF;;;;AApDK;;AAAA;;AAkBgB;;AAAA;;AA6BI;;AAAA;;AACP;;AAAA;;AAGD;;AAAA;;;;;;;;;;wEDlDJpB,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTpC,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U;;;;;AAUc4C,mBAAS,EAAE,CAAF;kBAAnD,uDAAmD;mBAAzC,wE,EAAc;AAAE,wBAAQ;AAAV,a;AAA2B,WAAE,C;AAChBR,cAAI,EAAE,CAAF;kBAAzC,uDAAyC;mBAA/B,8D,EAAS;AAAE,wBAAQ;AAAV,a;AAAsB,WAAE;;;;;;;;;;;;;;;;;;;AEtB9C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMmB,QAAQ,GAAG,4DAAjB;AACA,UAAMC,YAAY,GAAGD,QAAQ,GAAG,SAAhC;AAEA,UAAME,aAAa,GAAG;AACpBC,aAAK,YAAKF,YAAL,WADe;AAEpBG,cAAM,YAAKH,YAAL,YAFc;AAGpBI,kBAAU,YAAKJ,YAAL;AAHU,OAAtB;;UAqBaK,U;AACX,4BAAoBC,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AAA0B;;;;qCAEnC;AACT,mBAAO,KAAKA,UAAL,CAAgBC,GAAhB,CAAoBN,aAAa,CAACC,KAAlC,CAAP;AACD;;;sCAEW;AACV;AACA,mBAAO,KAAKI,UAAL,CAAgBC,GAAhB,CAAoBN,aAAa,CAACE,MAAlC,EAA0CK,IAA1C,CACL,2DAAI,UAACC,QAAD,EAAqB;AACvB,qBAAOA,QAAQ,CACZf,MADI,CACG,UAAAT,IAAI;AAAA,uBAAIA,IAAI,CAACF,SAAL,GAAiB,EAArB;AAAA,eADP,EAEJC,GAFI,CAEA,UAAAC,IAAI,EAAI;AACX,uBAAO;AACLyB,0BAAQ,EAAEzB,IAAI,CAACyB,QADV;AAELzD,yBAAO,EAAEgC,IAAI,CAAC0B,aAFT;AAGL9C,6BAAW,EAAEoB,IAAI,CAACpB,WAHb;AAIL+C,+BAAa,EAAE3B,IAAI,CAAC2B,aAJf;AAKLC,8BAAY,EAAE5B,IAAI,CAACF,SAAL,GAAiB,EAL1B;AAMLA,2BAAS,EAAEE,IAAI,CAACF,SANX;AAOL+B,wBAAM,EAAE7B,IAAI,CAAC6B,MAPR;AAQLC,2BAAS,EAAE9B,IAAI,CAAC8B;AARX,iBAAP;AAUD,eAbI,CAAP;AAcD,aAfD,CADK,CAAP;AAkBD;;;mDAE0C;AAAA,gBAApBnD,WAAoB,uEAAN,IAAM;AACzC,mBAAO,KAAK0C,UAAL,CAAgBC,GAAhB,CACLN,aAAa,CAACG,UAAd,GAA2B,2BAA3B,GAAyDxC,WADpD,CAAP;AAGD;;;;;;;yBAjCUyC,U,EAAU,uH;AAAA,O;;;eAAVA,U;AAAU,iBAAVA,UAAU,K;AAAA,oBAFT;;;;;wEAEDA,U,EAAU;gBAHtB,wDAGsB;iBAHX;AACVW,sBAAU,EAAE;AADF,W;AAGW,U;;;;;;;;;;;;;;;;;;;;;;AC5BvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAaaC,kB;AAGX,oCAAoBC,oBAApB,EAAgE;AAAA;;AAA5C,eAAAA,oBAAA,GAAAA,oBAAA;AAFpB,eAAAC,cAAA,GAAyB,CAAzB;AAEkE;;;;oCAGhEC,O,EACAC,I,EAAiB;AAAA;;AAEjB,gBAAI,KAAKF,cAAL,KAAwB,CAA5B,EAA+B;AAC7B,mBAAKD,oBAAL,CAA0BI,YAA1B;AACD;;AACD,iBAAKH,cAAL;AAEA,mBAAOE,IAAI,CAACE,MAAL,CAAYH,OAAZ,EAAqBZ,IAArB,EACL;AACA,4EAAS,YAAM;AACb,oBAAI,CAACW,cAAL;;AACA,kBAAI,MAAI,CAACA,cAAL,KAAwB,CAA5B,EAA+B;AAC7B,sBAAI,CAACD,oBAAL,CAA0BM,WAA1B;AACD;AACF,aALD,CAFK,CAAP;AASD;;;;;;;yBAvBUP,kB,EAAkB,0J;AAAA,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB;;;;;wEAAlBA,kB,EAAkB;gBAD9B;AAC8B,U;;;;;;;AA0BxB,UAAMQ,2BAA2B,GAAG,CACzC;AAAEC,eAAO,EAAE,sEAAX;AAA8BC,gBAAQ,EAAEV,kBAAxC;AAA4DW,aAAK,EAAE;AAAnE,OADyC,CAApC;;;;;;;;;;;;;;;;ACvCP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,uB;AAEX,2CAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,uB;AAAuB,O;;;cAAvBA,uB;AAAuB,4C;AAAA,gB;AAAA,e;AAAA,yF;AAAA;AAAA;ACPpC;;AAAI;;AAAoB;;AAExB;;AACI;;AAAI;;AAAwC;;AAAkB;;AAAI;;AAClE;;AAAI;;AAA2B;;AAAQ;;AAAI;;AAE/C;;;;;;;;;wEDCaA,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTvF,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;AEPpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQasF,mB;AAQX,uCAAc;AAAA;;AAPd,eAAAzE,IAAA,GAAiB;AACf0E,mBAAO,EAAE,oBADM;AAEfC,yBAAa,EAAE;AAFA,WAAjB;AAKA,eAAAC,KAAA,GAAQ,IAAI1E,IAAJ,EAAR;AAEgB;;;;qCAER,CAAW;;;;;;;yBAVRuE,mB;AAAmB,O;;;cAAnBA,mB;AAAmB,uC;AAAA,gB;AAAA,e;AAAA,sK;AAAA;AAAA;ACRhC;;AACE;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAAM;;;;AAAuC;;AAC/C;;;;AAXmB;;AAAA;;AAUX;;AAAA;;;;;;;;;;wEDHKA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTxF,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;AERhkBA,UAAMjB,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEQ,iBAAS,EAAE,yEAFb;AAGEkG,gBAAQ,EAAE,CACR;AACE1G,cAAI,EAAE,EADR;AAEEQ,mBAAS,EAAE;AAFb,SADQ,EAKR;AACER,cAAI,EAAE,mBADR;AAEEQ,mBAAS,EAAE;AAFb,SALQ,EASR;AACER,cAAI,EAAE,yBADR;AAEEQ,mBAAS,EAAE;AAFb,SATQ,EAaR;AACER,cAAI,EAAE,MADR;AAEEQ,mBAAS,EAAE;AAFb,SAbQ;AAHZ,OADqB,CAAvB;;UA2CaH,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBATlB,CACP,4DADO,EAEP,6DAAasG,QAAb,CAAsB5G,MAAtB,CAFO,EAGP,yEAHO,EAIP,wFAJO,EAKP,2DALO,CASkB;;;;4HAAhBM,gB,EAAgB;AAAA,yBAjBzB,yEAiByB,EAhBzB,kGAgByB,EAfzB,qHAeyB,EAdzB,wHAcyB,EAbzB,4GAayB,EAZzB,gGAYyB,EAXzB,mFAWyB;AAXZ,oBAGb,4DAHa,EAGD,4DAHC,EAKb,yEALa,EAMb,wFANa,EAOb,2DAPa;AAWY,S;AAJd,O;;;;;wEAIFA,gB,EAAgB;gBAnB5B,sDAmB4B;iBAnBnB;AACRa,wBAAY,EAAE,CACZ,yEADY,EAEZ,kGAFY,EAGZ,qHAHY,EAIZ,wHAJY,EAKZ,4GALY,EAMZ,gGANY,EAOZ,mFAPY,CADN;AAURP,mBAAO,EAAE,CACP,4DADO,EAEP,6DAAagG,QAAb,CAAsB5G,MAAtB,CAFO,EAGP,yEAHO,EAIP,wFAJO,EAKP,2DALO;AAVD,W;AAmBmB,U;;;wEAfzB,qH,EAAqB,2+MAFrB,yEAEqB,EADrB,kGACqB,EAArB,qHAAqB,EACrB,wHADqB,EAErB,4GAFqB,EAGrB,gGAHqB,EAIrB,mFAJqB,C,EAIR,6xB;;;;;;;;;;;;;;;;;AClDjB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYa6G,yB;AAIX,2CACUC,IADV,EAEUC,aAFV,EAGUC,YAHV,EAGoC;AAAA;;AAF1B,eAAAF,IAAA,GAAAA,IAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AANV,eAAAC,KAAA,GAAgB,sBAAhB;AACA,eAAAC,MAAA,GAAiB,EAAjB;AAQA,eAAAC,UAAA,GAAa,2BAAb;AAFI;;;;qCAII,CAAW;;;qCAER;AAAA;;AACTpE,mBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKiE,KAApC;AACA,gBAAMG,YAAY,GAChB,yEAAYC,OAAZ,GACA,yEAAYC,QAAZ,CAAqBC,QADrB,GAEA,yEAAYD,QAAZ,CAAqBzF,SAHvB;AAKA,mBAAO,KAAKiF,IAAL,CAAUU,IAAV,CAAeJ,YAAf,EAA6B;AAAEH,mBAAK,EAAE,KAAKA;AAAd,aAA7B,EAAoDpF,SAApD,CACL,UAACC,IAAD,EAAe;AACb,oBAAI,CAACoF,MAAL,GAAcpF,IAAI,CAAC2F,MAAnB;AACA,oBAAI,CAACR,KAAL,GAAa,EAAb;AACD,aAJI,EAKL,UAACS,KAAD,EAAW;AACT,kBAAM5F,IAAI,GAAG;AACXhB,qBAAK,EAAE,cADI;AAEX6G,oBAAI,EACF;AAHS,eAAb;;AAKA,oBAAI,CAACZ,aAAL,CAAmBa,UAAnB,CAA8B9F,IAA9B,EANS,CAQT;;AACD,aAdI,CAAP;AAgBD;;;sCAEW;AACV,iBAAKkF,YAAL,CAAkBa,IAAlB;AACD;;;;;;;yBAzCUhB,yB,EAAyB,gI,EAAA,6I,EAAA,0I;AAAA,O;;;cAAzBA,yB;AAAyB,8C;AAAA,iB;AAAA,e;AAAA,ipB;AAAA;AAAA;ACZtC;;AAAI;;AAAiB;;AAErB;;AAAG;;AAAQ;;AAAgB;;AAAS;;AACpC;;AACE;;AAAI;;AAA6C;;AACjD;;AAAI;;AAAuC;;AAC3C;;AAAI;;AAA2D;;AACjE;;AAEA;;AACE;;AAAM;AAAA,qBAAY,IAAAiB,QAAA,EAAZ;AAAsB,aAAtB;;AACJ;;AACE;;AACE;;AAA6C;;AAAI;;AACjD;;AACoD;AAAA;AAAA;;AADpD;;AAEF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AAEA;;AAAgD;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AAC9C;;AACF;;AAEA;;AAAwB;;AAAY;;AAEpC;;AAAiB;;AAAY;;AAC7B;;AACE;;AAAyB;;AAAoB;;AAC7C;;AAAG;;AAAkE;;AACrE;;AAAW;;AAAyB;;AACtC;;AACF;;;;;;AAtB4D;;AAAA;;AAGD;;AAAA;;AAWjC;;AAAA;;;;;;;;;wEDjBblB,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACT9F,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,oCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEZtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,0E,CAIA;;;UAOa+G,Y;;;;;cAAAA;;;;2BAAAA,Y;AAAY,S;AAAA,kBAHd,CAAC,wEAAD,CAGc;;;;4HAAZA,Y,EAAY;AAAA,yBAJR,wEAIQ;AAJO,oBACpB,wEADoB;AAIP,S;AAHE,O;;;;;wEAGdA,Y,EAAY;gBALxB,sDAKwB;iBALf;AACR7G,wBAAY,EAAE,CAAC,wEAAD,CADN;AAERP,mBAAO,EAAE,CAAC,wEAAD,CAFD;AAGRd,mBAAO,EAAE;AAHD,W;AAKe,U;;;;;;;;;;;;;;;;;;ACXzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,0E,CAEA;;;UAOamI,a;AACX,+BAAmBC,MAAnB,EAAsC;AAAA;;AAAnB,eAAAA,MAAA,GAAAA,MAAA;AAAqB;;;;qCAE7BpG,I,EAAI;AACb,gBAAMqG,SAAS,GAAG,KAAKD,MAAL,CAAYL,IAAZ,CAAiB,wEAAjB,EAAkC;AAClDO,mBAAK,EAAE,KAD2C;AAElDtG,kBAAI,EAAEA;AAF4C,aAAlC,CAAlB;AAKAqG,qBAAS,CAACE,WAAV,GAAwBxG,SAAxB,CAAkC,UAACqF,MAAD,EAAY;AAC5CnE,qBAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCkE,MAArC;AACD,aAFD;AAGD;;;iCACG,CAAW;;;kCAEV,CAAW;;;;;;;yBAfLe,a,EAAa,0H;AAAA,O;;;eAAbA,a;AAAa,iBAAbA,aAAa,K;AAAA,oBAFZ;;;;;wEAEDA,a,EAAa;gBAHzB,wDAGyB;iBAHd;AACVxC,sBAAU,EAAE;AADF,W;AAGc,U;;;;;;;;;;;;;;;;;;;;;;ACT1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQa6C,e;AACX,iCACSH,SADT,EAEkCrG,IAFlC,EAE2C;AAAA;;AADlC,eAAAqG,SAAA,GAAAA,SAAA;AACyB,eAAArG,IAAA,GAAAA,IAAA;AAC9B;;;;qCAEI,CAAW;;;oCAEToF,M,EAAM;AACd,iBAAKiB,SAAL,CAAeI,KAAf,CAAqBrB,MAArB;AACD;;;;;;;yBAVUoB,e,EAAe,sI,EAAA,gEAGhB,wEAHgB,C;AAGD,O;;;cAHdA,e;AAAe,mC;AAAA,iB;AAAA,e;AAAA,iO;AAAA;AAAA;ACR5B;;AAAqB;;AAAgB;;AACrC;;AACI;;AAAG;;AAAe;;AACtB;;AACA;;AACA;;AACI;;AAAG;AAAA,qBAAS,IAAAE,SAAA,CAAU,IAAV,CAAT;AAAwB,aAAxB;;AAA0B;;AAAM;;AACnC;;AAAgE;;AAAE;;AACtE;;;;AARqB;;AAAA;;AAEd;;AAAA;;;;;;;;;wEDMMF,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTvH,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKiB,U;;;;;;oBAGvB,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;AEXZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,4E,CAEA;;;AAaA,UAAMwH,eAAe,GAAG,CACtB,sEADsB,EAEtB,+EAFsB,EAGtB,8EAHsB,EAItB,sEAJsB,EAKtB,oEALsB,EAMtB,wEANsB,EAOtB,wEAPsB,EAQtB,wEARsB,EAStB,oEATsB,EAUtB,2EAVsB,EAWtB,6EAXsB,CAAxB;;UAmBaC,c;;;;;cAAAA;;;;2BAAAA,c;AAAc,S;AAAA,4BAHZD,eAGY,GAlBzB,sEAkByB,EAjBzB,+EAiByB,EAhBzB,8EAgByB,EAfzB,sEAeyB,EAdzB,oEAcyB,EAbzB,wEAayB,EAZzB,wEAYyB,EAXzB,wEAWyB,EAVzB,oEAUyB,EATzB,2EASyB,EARzB,6EAQyB;;;;4HAAdC,c,EAAc;AAAA,oBAlBzB,sEAkByB,EAjBzB,+EAiByB,EAhBzB,8EAgByB,EAfzB,sEAeyB,EAdzB,oEAcyB,EAbzB,wEAayB,EAZzB,wEAYyB,EAXzB,wEAWyB,EAVzB,oEAUyB,EATzB,2EASyB,EARzB,6EAQyB;AARR,oBAVjB,sEAUiB,EATjB,+EASiB,EARjB,8EAQiB,EAPjB,sEAOiB,EANjB,oEAMiB,EALjB,wEAKiB,EAJjB,wEAIiB,EAHjB,wEAGiB,EAFjB,oEAEiB,EADjB,2EACiB,EAAjB,6EAAiB;AAQQ,S;AARR,O;;;;;wEAQNA,c,EAAc;gBAL1B,sDAK0B;iBALjB;AACRvH,wBAAY,EAAE,EADN;AAERP,mBAAO,YAAM6H,eAAN,CAFC;AAGR3I,mBAAO,YAAM2I,eAAN;AAHC,W;AAKiB,U;;;;;;;;;;;;;;;;;;AClC3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACI;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AACvC;;AAAK;AAAA;;AAAA,mBAASE,MAAM,CAACC,eAAP,EAAT;AAAiC,WAAjC;;AACD;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAAkB;;AAAC;;AAEvD;;AAAI;;AAAW;;AACnB;;AAEA;;AACI;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AAAkB;;AAAM;;AAC3B;;AAA0C;;AAAE;;AAChD;;AACJ;;AACJ;;;;;;AAZa;;AAAA;;;;UDQAC,c;AAGX,gCAAoB7B,YAApB,EAAgD;AAAA;;AAA5B,eAAAA,YAAA,GAAAA,YAAA;AAA8B;;;;qCAEvC;AACT,iBAAK8B,QAAL,GAAgB,KAAK9B,YAAL,CAAkB+B,KAAlB,EAAhB;AACD;;;kCAEO;AACNhG,mBAAO,CAACC,GAAR,CAAY,cAAZ;AACA,iBAAKgE,YAAL,CAAkBuB,KAAlB;AACD;;;;;;;yBAZUM,c,EAAc,4H;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA,gB;AAAA,e;AAAA,+L;AAAA;AAAA;ACT3B;;;;;;AAAc;;;;;;;;;;wEDSDA,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACT9H,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;;;AET3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,+C,CAAA;;;UAQa+H,Y;AAHb;AAAA;;AAIU,eAAAC,OAAA,GAA6C,IAAI,oDAAJ,CACnD,OADmD,CAA7C;AAeT;;;;kCAXM;AACH,mBAAO,KAAKA,OAAL,CAAaC,YAAb,EAAP;AACD;;;iCAEM;AACL,iBAAKD,OAAL,CAAanD,IAAb,CAAkB,MAAlB;AACD;;;kCAEO;AACN,iBAAKmD,OAAL,CAAanD,IAAb,CAAkB,OAAlB;AACD;;;;;;;yBAfUkD,Y;AAAY,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;wEAEDA,Y,EAAY;gBAHxB,wDAGwB;iBAHb;AACVvD,sBAAU,EAAE;AADF,W;AAGa,U;;;;;;;;;;;;;;;;;;ACRzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASa0D,iB;AAIX,mCAAoBrC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAHpB,eAAAK,UAAA,GAAa,2BAAb;AACA,eAAAiC,QAAA,GAAgB,EAAhB;AAEwC;;;;qCAEhC;AAAA;;AACN,iBAAKC,WAAL,GAAmBxH,SAAnB,CAA6B,UAAAuH,QAAQ,EAAI;AACvCrG,qBAAO,CAACC,GAAR,CAAY,2CAAZ,EAAyDoG,QAAzD;AACA,oBAAI,CAACA,QAAL,GAAgBA,QAAhB;AACD,aAHD;AAID;;;wCAEa;AACZ,mBAAO,KAAKtC,IAAL,CAAU9B,GAAV,CAAc,KAAKmC,UAAnB,EAA+BlC,IAA/B,CAAoC,6DAAM,IAAN,CAApC,CAAP;AACD;;;;;;;yBAfUkE,iB,EAAiB,gI;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA,iB;AAAA,e;AAAA,+H;AAAA;AAAA;ACT9B;;AAAI;;AAA6B;;AAEjC;;AAAG;;AAAmC;;AAAiB;;AAAI;;AAC3D;;AAAG;;AAA6B;;AAAW;;AAAI;;AAC/C;;AAAG;;AAAsC;;AAAoB;;AAAI;;;;;;;;;wEDKpDA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTpI,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;AET9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaqI,mB;AAGX,uCAAc;AAAA;AAAE;;;;qCAER,CAAW;;;;;;;yBALRA,mB;AAAmB,O;;;cAAnBA,mB;AAAmB,wC;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,oU;AAAA;AAAA;ACXhC;;AACE;;AACE;;AACE;;AAA6B;;AAAkB;;AACjD;;AACA;;AACE;;AACE;;AACE;;AAA0C;;AAAI;;AAChD;;AACF;;AACF;;AACF;;AACF;;;;AAbuE;;AAGpC;;AAAA;;;;;;;;;wEDQtBA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTvI,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;AACrBa,cAAI,EAAE,CAAF;kBAAZ;AAAY,WAAE;;;;;;;;;;;;;;;;;;;AEZjB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOayH,qB;AAGX,yCAAc;AAAA;AAAG;;;;qCAEN,CACV;;;;;;;yBANUA,qB;AAAqB,O;;;cAArBA,qB;AAAqB,yC;AAAA,gB;AAAA,e;AAAA,4I;AAAA;AAAA;ACPlC;;AACE;;AACE;;AACA;;AACE;;AACE;;AAAY;;AAAQ;;AAAa;;AAAS;;AAE5C;;AACF;;AACF;;AACF;;;;;;;;wEDHaA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTxI,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;AEPlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAiBauI,sB;AAKX,wCACU7D,oBADV,EAEU8D,OAFV,EAGUC,kBAHV,EAG+C;AAAA;;AAFrC,eAAA/D,oBAAA,GAAAA,oBAAA;AACA,eAAA8D,OAAA,GAAAA,OAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AAPV,eAAAC,YAAA,GAAuB,GAAvB;AACA,eAAAC,OAAA,GAAmB,KAAnB;AAOI;;;;4CAEW;AAAA;;AACb,iBAAKH,OAAL,CAAaI,aAAb,CAA2BC,KAA3B,CAAiCb,OAAjC,GAA2C,MAA3C;AACA,iBAAKc,mBAAL,GAA2B,KAAKpE,oBAAL,CAA0BqE,aAA1B,CACxB/E,IADwB,CACnB,oEAAa,KAAK0E,YAAlB,CADmB,EAExB9H,SAFwB,CAEd,UAAC4F,MAAD,EAAqB;AAC9B,oBAAI,CAACgC,OAAL,CAAaI,aAAb,CAA2BC,KAA3B,CAAiCb,OAAjC,GAA2CxB,MAAM,GAAG,OAAH,GAAa,MAA9D;;AACA,oBAAI,CAACiC,kBAAL,CAAwBO,aAAxB;AACD,aALwB,CAA3B;AAMD;;;wCAEa;AACZ,iBAAKF,mBAAL,CAAyBG,WAAzB;AACD;;;;;;;yBAvBUV,sB,EAAsB,6I,EAAA,yH,EAAA,gI;AAAA,O;;;cAAtBA,sB;AAAsB,2C;AAAA,iB;AAAA,e;AAAA,yZ;AAAA;AAAA;ACjBnC;;AACE;;AACE;;AACE;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACF;;AACA;;AAAA;;AACE;;AACE;;AACE;;AACA;;AAMA;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;;;;;;;wEDXaA,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTzI,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMakJ,oB;AACX,wCAAc;AAAA;;AAEN,eAAAC,QAAA,GAAoB,KAApB;AACR,eAAAJ,aAAA,GAAkC,IAAI,4CAAJ,EAAlC;AAHgB;;;;yCAeD;AACb,iBAAKJ,OAAL,GAAe,IAAf;AACD;;;wCAEa;AACZ,iBAAKA,OAAL,GAAe,KAAf;AACD;;;8BAhBU;AACT,mBAAO,KAAKQ,QAAZ;AACD,W;4BAEWlG,K,EAAO;AACjBnB,mBAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,iBAAKoH,QAAL,GAAgBlG,KAAhB;AACA,iBAAK8F,aAAL,CAAmBlE,IAAnB,CAAwB5B,KAAxB;AACD;;;;;;;yBAdUiG,oB;AAAoB,O;;;eAApBA,oB;AAAoB,iBAApBA,oBAAoB,K;AAAA,oBAFnB;;;;;wEAEDA,oB,EAAoB;gBAHhC,wDAGgC;iBAHrB;AACV1E,sBAAU,EAAE;AADF,W;AAGqB,U;;;;;;;;;;;;;;;;;;;;ACNjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOa4E,mB;AACX,uCAAc;AAAA;AAAE;;;;qCAER,CAAW;;;;;;;yBAHRA,mB;AAAmB,O;;;cAAnBA,mB;AAAmB,uC;AAAA,iB;AAAA,e;AAAA,ohB;AAAA;AAAA;ACPhC;;AACE;;AACE;;AACE;;AAA+C;;AAAa;;AAC9D;;AACA;;AACE;;AACE;;AACE;;AAAyC;;AAAI;;AAC/C;;AACA;;AACE;;AAA2C;;AAAQ;;AACrD;;AACA;;AACE;;AAAuC;;AAAI;;AAC7C;;AACA;;AACE;;AAA6C;;AAAU;;AACzD;;AACA;;AACE;;AAAsC;;AAAY;;AACpD;;AACA;;AACE;;AAA4B;;AAAU;;AACxC;;AACF;;AACF;;AACF;;AACF;;;;;;;;;wEDrBaA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTtJ,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;AEPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaqJ,gB;AAEX,oCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,gB;AAAgB,O;;;cAAhBA,gB;AAAgB,oC;AAAA,iB;AAAA,e;AAAA,qP;AAAA;AAAA;ACP7B;;AACE;;AAEA;;AACE;;AAAI;;AAAI;;AAA6B;;AAAgB;;AAAO;;AAC5D;;AACE;;AACA;;AAA6B;;AAAS;;AAAQ;;AAChD;;AACF;;AAEA;;AACE;;AAAM;;AAAc;;AACtB;;AACF;;;;;;;;;wEDPaA,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTvJ,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKkB,U;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,UAAMsJ,gBAAgB,GAAG,CACvB,oFADuB,EAEvB,0FAFuB,EAGvB,2EAHuB,EAIvB,+FAJuB,EAKvB,sFALuB,CAAzB;;UAYaC,Y;;;;;cAAAA;;;;2BAAAA,Y;AAAY,S;AAAA,kBAHd,CAAC,4DAAD,EAAe,4DAAf,CAGc,EAFb,4DAEa;;;;4HAAZA,Y,EAAY;AAAA,yBAXvB,oFAWuB,EAVvB,0FAUuB,EATvB,2EASuB,EARvB,+FAQuB,EAPvB,sFAOuB;AAPJ,oBAIT,4DAJS,EAIK,4DAJL,CAOI;AAHa,oBAC1B,4DAD0B,EARpC,oFAQoC,EAPpC,0FAOoC,EANpC,2EAMoC,EALpC,+FAKoC,EAJpC,sFAIoC;AAGb,S;AAPJ,O;;;;;wEAORA,Y,EAAY;gBALxB,sDAKwB;iBALf;AACRrJ,wBAAY,YAAMoJ,gBAAN,CADJ;AAER3J,mBAAO,EAAE,CAAC,4DAAD,EAAe,4DAAf,CAFD;AAGRd,mBAAO,GAAG,4DAAH,SAAoByK,gBAApB;AAHC,W;AAKe,U;;;;;;;;;;;;;;;;;;ACrBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaE,kB;AAHb;AAAA;;AAIE;AAEA;AACQ,eAAAC,YAAA,GAAe,IAAI,oDAAJ,CAAiC;AACtDC,kBAAM,EAAE,EAD8C;AAEtDC,uBAAW,EAAE;AAFyC,WAAjC,CAAf,CAPV,CAWE;;AACA,eAAAC,OAAA,GAAU,KAAKH,YAAL,CAAkBxB,YAAlB,EAAV;AASD;;;;mCAHU4B,G,EAAkB;AACzB,iBAAKJ,YAAL,CAAkB5E,IAAlB,CAAuBgF,GAAvB;AACD;;;8BANa;AACZ,mBAAO,KAAKJ,YAAL,CAAkBK,QAAlB,EAAP,CADY,CACyB;AACtC;;;;;;;yBAbUN,kB;AAAkB,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBAFjB;;;;;wEAEDA,kB,EAAkB;gBAH9B,wDAG8B;iBAHnB;AACVhF,sBAAU,EAAE;AADF,W;AAGmB,U;;;;;;;;;;;;;;;;;;ACR/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACkDY;;AACI;;AAAwB;AAAA;;AAAA;;AAAA;;AAAA,mBAAY,OAAAuF,iBAAA,iCAAZ;AAA2D,WAA3D,EAA4D,QAA5D,EAA4D;AAAA;;AAAA;;AAAA,mBACtE,OAAAA,iBAAA,mBADsE;AAClC,WAD1B;;AAExB;;AACJ;;;;;;AAHc;;AAAA;;;;;;;;AAWd;;AACI;;AAAwB;AAAA;;AAAA;;AAAA;;AAAA,mBAAY,OAAAA,iBAAA,iCAAZ;AAA2D,WAA3D,EAA4D,QAA5D,EAA4D;AAAA;;AAAA;;AAAA,mBACtE,QAAAA,iBAAA,mBADsE;AAClC,WAD1B;;AAExB;;AACJ;;;;;;AAHc;;AAAA;;;;;;;;AAQd;;AACkB;AAAA;;AAAA;;AAAA;;AAAA,mBAAY,QAAAA,iBAAA,kCAAZ;AAA2D,WAA3D,EAA4D,QAA5D,EAA4D;AAAA;;AAAA;;AAAA,mBAChE,QAAAA,iBAAA,mBADgE;AAC5B,WADhC;;AAElB;;;;;;AAFI;;;;UD3DHC,iB;AAgBX,mCACSD,iBADT,EAEUE,kBAFV,EAGUC,KAHV,EAIUC,MAJV,EAIwB;AAAA;;AAHf,eAAAJ,iBAAA,GAAAA,iBAAA;AACC,eAAAE,kBAAA,GAAAA,kBAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA,CAAc,CAjBxB;;AACA,eAAAC,YAAA,GAAe,UAACC,CAAD,EAAIC,IAAJ;AAAA,mBAAaA,IAAI,CAACxL,EAAlB;AAAA,WAAf;;AAKA,eAAAyL,UAAA,GAA0B;AACxBb,kBAAM,EAAE,EADgB;AAExBC,uBAAW,EAAE;AAFW,WAA1B;AAYI;;;;qCAEI;AAAA;;AACN,iBAAKa,UAAL,GAAkB,KAAKT,iBAAL,CAAuBU,MAAzC;AACA,iBAAKC,aAAL,GAAqB,KAAKT,kBAAL,CAAwBL,OAA7C;AACA,iBAAKe,eAAL,GAAuB,KAAKT,KAAL,CAAWU,WAAX,CAAuB5G,IAAvB,CAA4B,oEAAa,GAAb,CAA5B,CAAvB,CAHM,CAKN;;AACA,iBAAKuG,UAAL,GAAkB,MAAH,OAAG,CAAH,EAAG,EAAK,KAAKL,KAAL,CAAWW,QAAX,CAAoBD,WAAzB,CAAlB,CANM,CAQN;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA,iBAAKE,kBAAL,GAA0B,2DACxB,CAAC,KAAKN,UAAN,EAAkB,KAAKG,eAAvB,CADwB,CAExB;AAFwB,cAGxB3G,IAHwB,CAIxB,2DAAI,gBAAwB;AAAA;AAAA,kBAAtB+G,SAAsB;AAAA,kBAAXC,KAAW;;AAC1BlJ,qBAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDiJ,KAAvD;;AAEA,oBAAI,CAACC,iBAAL,CAAuBD,KAAvB;;AAEA,kBAAIE,QAAQ,GAAGH,SAAf;;AACA,kBAAIC,KAAK,CAACtB,MAAV,EAAkB;AAChBwB,wBAAQ,GAAGH,SAAS,CAAC7H,MAAV,CACT,UAACT,IAAD;AAAA,yBACEA,IAAI,CAAC5C,KAAL,CAAWuD,WAAX,GAAyB+H,OAAzB,CAAiCH,KAAK,CAACtB,MAAN,CAAatG,WAAb,EAAjC,MACA,CAAC,CAFH;AAAA,iBADS,CAAX;AAKD,eAZyB,CAc1B;;;AACA,kBAAI,iBAAiB4H,KAArB,EAA4B;AAC1B,oBAAIA,KAAK,CAACrB,WAAN,KAAsB,EAA1B,EAA8B,OAAOuB,QAAP;AAC9BA,wBAAQ,GAAGA,QAAQ,CAAChI,MAAT,CACT,UAACT,IAAD;AAAA,yBAAUA,IAAI,CAACkH,WAAL,MAAsBqB,KAAK,CAACrB,WAAN,IAAqB,MAA3C,CAAV;AAAA,iBADS,CAAX;AAGD;;AACD,qBAAOuB,QAAP;AACD,aAtBD,CAJwB,CAA1B;AA4BD;;;oCAESrL,K,EAAe;AACvB,iBAAKkK,iBAAL,CAAuBqB,OAAvB,CAA+BvL,KAA/B;AACA,iBAAKwL,cAAL,CAAoBzC,aAApB,CAAkC3F,KAAlC,GAA0C,EAA1C;AACD;;;mCAEQH,K,EAAO;AACdhB,mBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKwI,UAA7B;AACA,gBAAIe,QAAQ,GAAG,MAAH,OAAG,CAAH,EAAG,EAAK,KAAKf,UAAV,CAAf;AAEA,iBAAKJ,MAAL,CAAYoB,QAAZ,CAAqB,EAArB,EAAyB;AACvBC,wBAAU,EAAE,KAAKtB,KADM;AAEvBU,yBAAW,EAAE,MAAF,OAAE,CAAF,EAAE,EAAKU,QAAL;AAFU,aAAzB;AAID;;;4CAEiBG,K,EAAO;AACvB;AACA;AACA,iBAAKxB,kBAAL,CAAwByB,QAAxB,CAAiCD,KAAjC;AACD;;;;;;;yBAtGUzB,iB,EAAiB,uI,EAAA,yI,EAAA,+H,EAAA,uH;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA;AAAA;;;;;;;;;;;;;;;;;ACb9B;;AACI;;AAAiB;;AAAS;;AAG1B;;AACI;;AAAI;;AAAM;;AACV;;;;AACA;;AACI;;AACI;;AACI;AAAA;AAAA,eAA+B,eAA/B,EAA+B;AAAA,qBAAkB,IAAA2B,QAAA,QAAlB;AAAkC,aAAjE;;AADJ;;AAGJ;;AAEA;;AACI;;AACI;;AAAW;;AAAM;;AACjB;;AAAY;AAAA;AAAA,eAAoC,eAApC,EAAoC;AAAA,qBAAkB,IAAAA,QAAA,QAAlB;AAAkC,aAAtE;;AACR;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AAEJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;AAAA;;AAAA;;AAAA,qBAAe,IAAAC,SAAA,WAAf;AAA8C,aAA9C;;AADJ;;AAEJ;;AACA;;AACI;;AAAgC;AAAA;;AAAA;;AAAA,qBAAS,IAAAA,SAAA,WAAT;AAAwC,aAAxC;;AAA0C;;AAAG;;AACjF;;AACJ;;AAIA;;AACI;;AACI;;AAAI;;AAAU;;AACd;;;;AAKJ;;AACJ;;AAEA;;AACI;;AAEI;;AAAI;;AAAkB;;AACtB;;;;AAKJ;;AAEA;;AACI;;AAAI;;AAAgB;;AACpB;;;;AAIJ;;AACJ;;AAKJ;;;;AA3EQ;;AAAA;;AAIY;;AAAA;;AAOY;;AAAA;;AAII;;AAAA;;AAGA;;AAAA;;AA0BV;;AAAA,2KAAsE,cAAtE,EAAsE,gBAAtE;;AAYA;;AAAA,4LAAuF,cAAvF,EAAuF,gBAAvF;;AASJ;;AAAA,0LAAqF,cAArF,EAAqF,gBAArF;;;;;;;;;;wED1DT5B,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTlK,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;AACCqL,wBAAc,EAAE,CAAF;kBAA1C,uDAA0C;mBAAhC,gB;AAAgC,WAAE;;;;;;;;;;;;;;;;;;;AER/C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,eAASQ,IAAT,GAAa;AAClB,eAAQC,IAAI,CAACC,MAAL,KAAgB,EAAjB,GAAuB,CAA9B;AACD;;UAOYC,Q;;;;AACJ,eAAAC,KAAA,GAAgB,CACrB;AACEnN,UAAE,EAAE,CADN;AAEEe,aAAK,EAAE,gBAFT;AAGE8J,mBAAW,EAAE;AAHf,OADqB,CAAhB;;;;;;;;;;;;;;;;AChBT;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;UAgBauC,a;AAKX,iCAAc;AAAA;;AAHJ,eAAAC,QAAA,GAAW,IAAI,0DAAJ,EAAX;AACA,eAAAC,MAAA,GAAS,IAAI,0DAAJ,EAAT;AAEM;;;;qCAER,CAAW;;;;;;;yBAPRF,a;AAAa,O;;;cAAbA,a;AAAa,iC;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,6U;AAAA;AAAA;AChB1B;;AACI;;AACI;;AACI;AAAA,qBAAU,IAAAC,QAAA,4BAAV;AAA8C,aAA9C;;AADJ;;AAEA;;AACI;;AACI;;AACJ;;AACJ;;AAOJ;;AACA;;AAAqD;AAAA,qBAAQ,IAAAC,MAAA,kBAAR;AAA4B,aAA5B;;AAA6B;;AAAM;;AAC5F;;;;AAfiE;;AAAA;;AAG/C;;AAAA;;AACF;;AAAA;;;;;;;;;;wEDUHF,a,EAAa;gBANzB,uDAMyB;iBANf;AACTpM,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD,CAHF;AAITqM,2BAAe,EAAE,sEAAwBC;AAJhC,W;AAMe,U;;;AACfhC,cAAI,EAAE,CAAF;kBAAZ;AAAY,WAAE,C;AACL6B,kBAAQ;kBAAjB;AAAiB,Y;AACRC,gBAAM;kBAAf;AAAe;;;;;;;;;;;;;;;;;;;AEnBlB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaG,e;AAMX,iCAAoB1G,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AALZ,eAAA2G,WAAA,GAAuB,KAAvB,CAK8B,CAHtC;;AACQ,eAAAC,UAAA,GAAa,wDAAb;;AAGN,cAAI,KAAKD,WAAT,EAAsB;AACpB,iBAAKC,UAAL,GAAkB,YAAlB;AACD;AACF;;;;gCAEK;AACJ,mBAAO,KAAK5G,IAAL,CAAU9B,GAAV,WAAyB,KAAK0I,UAA9B,EAAP;AACD;;;iCAEMnC,I,EAAY;AACjB,mBAAO,KAAKzE,IAAL,CAAUU,IAAV,WAAwB,KAAKkG,UAA7B,GAA2CnC,IAA3C,CAAP;AACD;;;iCAEMxL,E,EAAI;AACT,mBAAO,KAAK+G,IAAL,qBAAoB,KAAK4G,UAAzB,cAAuC3N,EAAvC,EAAP;AACD;;;uCAEYA,E,EAAY6K,W,EAAsB;AAC7C,mBAAO,KAAK9D,IAAL,CAAU6G,GAAV,WAAuB,KAAKD,UAA5B,cAA0C3N,EAA1C,GAAgD;AACrD6K,yBAAW,EAAXA;AADqD,aAAhD,CAAP;AAGD;;;;;;;yBA5BU4C,e,EAAe,uH;AAAA,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAFd;;;;;wEAEDA,e,EAAe;gBAH3B,wDAG2B;iBAHhB;AACV/H,sBAAU,EAAE;AADF,W;AAGgB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGfmI,iB;AAqBX,mCAAoBC,YAApB,EAAmD;AAAA;;AAA/B,eAAAA,YAAA,GAAAA,YAAA,CAA+B,CApBnD;AACA;AACA;AACA;AACA;AACA;;AACiB,eAAAC,WAAA,GAAc,IAAI,oDAAJ,CAA4B,EAA5B,CAAd,CAckC,CAZnD;;AACS,eAAApC,MAAA,GAAS,KAAKoC,WAAL,CAAiB5E,YAAjB,EAAT,CAW0C,CATnD;;AACS,eAAA6E,eAAA,GAAkB,KAAKrC,MAAL,CAAYzG,IAAZ,CACzB,2DAAI,UAACiI,KAAD;AAAA,mBAAmBA,KAAK,CAAC/I,MAAN,CAAa,UAACoH,IAAD;AAAA,qBAAUA,IAAI,CAACX,WAAf;AAAA,aAAb,CAAnB;AAAA,WAAJ,CADyB,CAAlB;AAIA,eAAAoD,iBAAA,GAAoB,KAAKtC,MAAL,CAAYzG,IAAZ,CAC3B,2DAAI,UAACiI,KAAD;AAAA,mBAAWA,KAAK,CAAC/I,MAAN,CAAa,UAACoH,IAAD;AAAA,qBAAU,CAACA,IAAI,CAACX,WAAhB;AAAA,aAAb,CAAX;AAAA,WAAJ,CAD2B,CAApB;AAKP,eAAKqD,QAAL;AACD;;;;qCAEgB;;;;;;;;AACH,6BAAM,KAAKJ,YAAL,CAAkB7I,GAAlB,GAAwBkJ,SAAxB,EAAN;;;AAARhB,2B;AACJ,2BAAKP,QAAL,CAAcO,KAAd;;;;;;;;;AACD,W,CAED;;;;mCAWSpC,G,EAAa;AACpB,iBAAKgD,WAAL,CAAiBhI,IAAjB,CAAsBgF,GAAtB;AACD;;;kCAEahK,K,EAAe;;;;;;;4BACvBA,KAAK,IAAIA,KAAK,CAACgC,M;;;;;AACjB;AACA;AACA;AACA;AACA;AAEMqL,2B,GAAQ,0D;AACRC,6B,GAAU;AAAErO,0BAAE,EAAEoO,KAAN;AAAarN,6BAAK,EAALA,KAAb;AAAoB8J,mCAAW,EAAE;AAAjC,uB;AAEhB,2BAAKsC,KAAL,gCAAiB,KAAKA,KAAtB,IAA6BkB,OAA7B;;;AAGe,6BAAM,KAAKP,YAAL,CAChBQ,MADgB,CACT;AAAEvN,6BAAK,EAALA,KAAF;AAAS8J,mCAAW,EAAE;AAAtB,uBADS,EAEhBsD,SAFgB,EAAN;;;AAAP3C,0B;AAIN;AACM5H,2B,GAAQ,KAAKuJ,KAAL,CAAWd,OAAX,CACZ,KAAKc,KAAL,CAAWoB,IAAX,CAAgB,UAACC,CAAD;AAAA,+BAAOA,CAAC,CAACxO,EAAF,KAASoO,KAAhB;AAAA,uBAAhB,CADY,C;AAGd,2BAAKjB,KAAL,CAAWvJ,KAAX,IAAoB,MAAH,OAAG,CAAH,EAAG,EACf4H,IADe,CAApB;AAGA,2BAAK2B,KAAL,sBAAiB,KAAKA,KAAtB;;;;;;;AAEA;AACAnK,6BAAO,CAAC2E,KAAR;AACA,2BAAK8G,UAAL,CAAgBL,KAAhB,EAAuB,KAAvB;;;;;;;;;AAGL;;;qCAEgBpO,E,EAAiC;AAAA,gBAArB0O,YAAqB,uEAAN,IAAM;;;;;;;AAChD;AACMlD,0B,GAAO,KAAK2B,KAAL,CAAWoB,IAAX,CAAgB,UAACC,CAAD;AAAA,+BAAOA,CAAC,CAACxO,EAAF,KAASA,EAAhB;AAAA,uBAAhB,C;AACb,2BAAKmN,KAAL,GAAa,KAAKA,KAAL,CAAW/I,MAAX,CAAkB,UAACoH,IAAD;AAAA,+BAAUA,IAAI,CAACxL,EAAL,KAAYA,EAAtB;AAAA,uBAAlB,CAAb;;2BAEI0O,Y;;;;;;;AAEA,6BAAM,KAAKZ,YAAL,CAAkBR,MAAlB,CAAyBtN,EAAzB,EAA6BmO,SAA7B,EAAN;;;;;;;;;AAEAnL,6BAAO,CAAC2E,KAAR;AACA,2BAAKwF,KAAL,gCAAiB,KAAKA,KAAtB,IAA6B3B,IAA7B;;;;;;;;;AAGL;;;uCAEkBxL,E,EAAY6K,W,EAAsB;;;;;;;AAC/CW,0B,GAAO,KAAK2B,KAAL,CAAWoB,IAAX,CAAgB,UAAC/C,IAAD;AAAA,+BAAUA,IAAI,CAACxL,EAAL,KAAYA,EAAtB;AAAA,uBAAhB,C;;2BAEPwL,I;;;;;AACF;AACM5H,2B,GAAQ,KAAKuJ,KAAL,CAAWd,OAAX,CAAmBb,IAAnB,C;AACd,2BAAK2B,KAAL,CAAWvJ,KAAX,IAAoB,MAAH,OAAG,CAAH,kBACZ4H,IADY,CAAG,EACX;AACPX,mCAAW,EAAXA;AADO,uBADW,CAApB;AAIA,2BAAKsC,KAAL,sBAAiB,KAAKA,KAAtB;;;AAGE,6BAAM,KAAKW,YAAL,CAAkBa,YAAlB,CAA+B3O,EAA/B,EAAmC6K,WAAnC,EAAgDsD,SAAhD,EAAN;;;;;;;;;AAEAnL,6BAAO,CAAC2E,KAAR;AACA,2BAAKwF,KAAL,CAAWvJ,KAAX,IAAoB,MAAH,OAAG,CAAH,kBACZ4H,IADY,CAAG,EACX;AACPX,mCAAW,EAAE,CAACA;AADP,uBADW,CAApB;;;;;;;;;AAML;;;8BArFQ;AACP,mBAAO,KAAKkD,WAAL,CAAiB/C,QAAjB,EAAP;AACD,W,CAED;AACA;;4BACUD,G,EAAa;AACrB,iBAAKgD,WAAL,CAAiBhI,IAAjB,CAAsBgF,GAAtB;AACD;;;;;;;yBAvCU8C,iB,EAAiB,0H;AAAA,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAFhB;;;;;wEAEDA,iB,EAAiB;gBAH7B,wDAG6B;iBAHlB;AACVnI,sBAAU,EAAE;AADF,W;AAGkB,U;;;;;;;;;;;;;;;;;;;;;;ACV9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;AAKO,UAAMkJ,iBAAiB,GAAG;AAC/BrH,gBAAQ,EAAE;AACRC,kBAAQ,EAAE,QADF;AAER1F,mBAAS,EAAE;AAFH,SADqB;AAK/B+M,cAAM,EAAE;AACNC,uBAAa,EAAE;AADT;AALuB,OAA1B;;;;;;;;;;;;;;;;ACLP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,kD,CAAA;AACA;AACA;;;AAIA,UAAMC,IAAI,GAAG,IAAb;AAEO,UAAMC,WAAW,GAAG,MAAH,OAAG,CAAH;AACtBC,kBAAU,EAAE,KADU;AAEtB3H,eAAO,6BAAsByH,IAAtB;AAFe,OAAG,EAGtB,qEAHsB,CAApB;AAMP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACrBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYE,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAInM,OAAO,CAAC2E,KAAR,CAAcwH,GAAd,CAAJ;AAAA,OADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { Page404Component } from \"./shared/page404/page404.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    loadChildren: () =>\n      import(\"./layouts/default/default.module\").then((m) => m.DefaultModule),\n  },\n  {\n    path: \"playground\",\n    loadChildren: () =>\n      import(\"./m-playground/playground.module\").then(\n        (m) => m.PlaygroundModule\n      ),\n  },\n  // {\n  //   path: \"song-lyrics\",\n  //   loadChildren: () =>\n  //     import(\"./song-lyrics/song-lyrics.module\").then(m => m.SongLyricsModule)\n  // },\n  // {\n  //   path: \"algorithm-visualizer\",\n  //   loadChildren: () =>\n  //     import(\"./algorithm-visualizer/algorithm-visualizer.module\").then(\n  //       m => m.AlgorithmVisualizerModule\n  //     )\n  // },\n  {\n    path: \"apps\",\n    loadChildren: () =>\n      import(\"./layouts/fullscreen/fullscreen.module\").then(\n        (m) => m.FullscreenModule\n      ),\n  },\n  {\n    path: \"bootstrap\",\n    loadChildren: () =>\n      import(\"./bootstrap-ui/bootstrap-ui.module\").then(\n        (m) => m.BootstrapUIModule\n      ),\n  },\n  {\n    path: \"robinhood\", //lazy load route\n    loadChildren: () =>\n      import(\"projects/robinhood/src/lib/robinhood.module\").then(\n        (m) => m.RobinhoodLibModule\n      ),\n  },\n  {\n    path: \"**\", //can be moved to defaultModule lazy loading as well\n    component: Page404Component,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Rattanak - 2020';\n}\n","<app-loading-screen></app-loading-screen>\n\n<router-outlet></router-outlet>\n\n<app-modal></app-modal>","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { AppComponent } from \"./app.component\";\nimport { ProjectsComponent } from \"./projects/projects.component\";\nimport { loadingInterceptorProviders } from \"./interceptors/loading.interceptor\";\nimport { LeetcodeReminderComponent } from \"./leetcode-reminder/leetcode-reminder.component\";\nimport { SharedModule } from \"./shared/shared.module\";\nimport { FullscreenModule } from \"./layouts/fullscreen/fullscreen.module\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n// leave it for now\nimport { MaterialModule } from \"./modules/material/material.module\";\nimport { DialogModule } from \"./modules/dialog/dialog.module\";\nimport { ModalComponent } from \"./modules/modal/modal.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectsComponent,\n    LeetcodeReminderComponent,\n    ModalComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    SharedModule,\n    FullscreenModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    DialogModule,\n  ],\n  exports: [SharedModule, FormsModule, BrowserModule],\n  providers: [loadingInterceptorProviders],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { C19Service } from \"../services/ainzine/c19.service\";\n\nexport interface I_C19_stat {\n  confirmed: number;\n  deaths: number;\n  recovered: number;\n}\n@Component({\n  selector: \"app-c19-dashboard\",\n  templateUrl: \"./c19-dashboard.component.html\",\n  styleUrls: [\"./c19-dashboard.component.scss\"]\n})\nexport class C19DashboardComponent implements OnInit {\n  constructor(private c19Service: C19Service) {}\n\n  // lat = 40.73061;\n  // lng = -73.935242;\n\n  selectedCountryCode = \"US\";\n\n  selectedMarker = {\n    country: \"US\"\n  };\n  worldStat: I_C19_stat;\n  countryStat: I_C19_stat;\n\n  markers = [];\n\n  lastUpdatedAt: Date;\n\n  ngOnInit(): void {\n    this.c19Service.getBrief().subscribe((data: I_C19_stat) => {\n      this.lastUpdatedAt = new Date();\n      this.worldStat = data;\n    });\n\n    this.c19Service.getLatest().subscribe(data => {\n      this.markers = data;\n    });\n\n    this.getTimeSeriesByCountry();\n  }\n\n  getTimeSeriesByCountry(marker?) {\n    let countryCode = \"US\";\n    if (marker) {\n      countryCode = marker.countrycode.iso2 || marker.countrycode.iso3;\n    }\n\n    this.c19Service\n      .getTimeSeriesByCountry(countryCode)\n      .subscribe((data: any) => {\n        if (data && data[0].timeseries) {\n          const times = data[0].timeseries;\n          let datesArray = Object.keys(times);\n          if (datesArray) {\n            this.countryStat =\n              data[0].timeseries[datesArray[datesArray.length - 1]];\n            console.log(\n              \"C19DashboardComponent -> ngOnInit -> this.countryStat\",\n              this.countryStat\n            );\n          }\n        }\n      });\n  }\n}\n","<section class=\"bg-light header d-flex justify-content-start py-3\">\n  <span>\n    <a style=\"margin-right: 25px\" routerLink=\"../covid19-dashboard\">Dashboard</a>\n    <a style=\"margin-right: 25px\" routerLink=\"../covid19-countries-table\">Risk Table</a>\n  </span>\n  <span class=\"text-secondary\">Last updated on: {{ lastUpdatedAt | date: \"short\" }}</span>\n  &nbsp;&nbsp;\n</section>\n<br />\n<section class=\"summary\">\n  <div class=\"row d-flex align-items-end\">\n    <div class=\"col\">\n      <div class=\"d-flex align-items-center\">\n        <h3 class=\"mr-3\">\n          By Country - <strong> {{ this.selectedMarker.country }}</strong>\n        </h3>\n        <mat-form-field>\n          <mat-label>Select a country</mat-label>\n          <mat-select [(value)]=\"selectedMarker\" (selectionChange)=\"getTimeSeriesByCountry(selectedMarker)\">\n            <mat-option *ngFor=\"let m of markers\" [value]=\"m\">{{\n              m.country\n            }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <c19-case-statistic [stat]=\"countryStat\"></c19-case-statistic>\n    </div>\n\n    <div class=\"col\">\n      <h3>Global &nbsp;</h3>\n      <c19-case-statistic [stat]=\"worldStat\"></c19-case-statistic>\n    </div>\n  </div>\n</section>","import { Component, OnInit, Input } from \"@angular/core\";\nimport { I_C19_stat } from \"../c19-dashboard/c19-dashboard.component\";\n\n@Component({\n  selector: \"c19-case-statistic\",\n  templateUrl: \"./case-statistic.component.html\",\n  styleUrls: [\"./case-statistic.component.scss\"]\n})\nexport class CaseStatisticComponent implements OnInit {\n  @Input() stat: I_C19_stat;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<ng-container *ngIf=\"stat\">\n  <div class=\"brief-item mb-3 \">\n    <!-- <span class=\"material-icons md-36 yellow\">\n        confirmation_number\n      </span> -->\n    <span style=\"margin: 8px; color: #8871E7\">\n      <i class=\"fas fas fa-thermometer-full fa-2x\"></i>\n    </span>\n    <div>\n      <h3 class=\"card-title mb-0\">{{ stat.confirmed }}</h3>\n      <p class=\"brief-item-label\">\n        Confirmed\n      </p>\n    </div>\n  </div>\n  <div class=\"brief-item mb-3 \">\n    <span class=\"material-icons md-36 red\">\n      report\n    </span>\n    <div>\n      <h3 class=\"card-title mb-0\">{{ stat.deaths }}</h3>\n      <p class=\"brief-item-label\">\n        Death\n      </p>\n    </div>\n  </div>\n  <div class=\"brief-item mb-3 \">\n    <span class=\"material-icons md-36 green\">\n      healing\n    </span>\n    <div>\n      <h3 class=\"card-title mb-0\">\n        {{ !stat.recovered ? \"N/A\" : stat.recovered }}\n      </h3>\n      <p class=\"brief-item-label\">\n        Recovered\n      </p>\n    </div>\n  </div>\n  <div class=\"brief-item mb-3 \">\n    <!-- <span class=\"material-icons md-36 orange\">\n        trending_up\n      </span> -->\n    <span style=\"margin: 8px; color: #EB7946;\">\n      <i class=\"fas fa-chart-line fa-2x\"></i>\n    </span>\n    <div>\n      <h3 class=\"card-title mb-0\">\n        {{ stat.deaths / stat.confirmed | percent }}\n      </h3>\n      <p class=\"brief-item-label\">\n        Mortality Rate\n      </p>\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnInit, ViewChild, AfterViewInit } from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { C19Service, ICountry } from \"../services/ainzine/c19.service\";\n\n@Component({\n  selector: \"app-case-table\",\n  templateUrl: \"./case-table.component.html\",\n  styleUrls: [\"./case-table.component.scss\"]\n})\nexport class CaseTableComponent implements OnInit, AfterViewInit {\n  lastUpdatedAt: Date;\n  displayedColumns: string[] = [\n    \"index\",\n    \"country\",\n    \"confirmed\",\n    \"deaths\",\n    \"recovered\"\n  ];\n  dataSource: MatTableDataSource<ICountry>;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(private c19Service: C19Service) {}\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    this.c19Service.getLatest().subscribe((data: ICountry[]) => {\n      data.sort((a, b) => {\n        return b.confirmed - a.confirmed;\n      });\n\n      data.map((item, index) => {\n        item.index = index + 1;\n        return item;\n      });\n\n      // Assign the data to the data source for the table to render\n      this.dataSource = new MatTableDataSource(data);\n      console.log(\n        \"CaseTableComponent -> ngOnInit -> this.dataSource\",\n        this.dataSource\n      );\n\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.paginator.pageSize = 20;\n      this.dataSource.sort = this.sort;\n      this.lastUpdatedAt = new Date();\n    });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource && this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","<section class=\"bg-light header d-flex justify-content-start py-3\">\n  <span>\n    <a style=\"margin-right: 25px\" routerLink=\"../covid19-dashboard\"\n      >Dashboard</a\n    >\n    <a style=\"margin-right: 25px\" routerLink=\"../covid19-countries-table\"\n      >Risk Table</a\n    >\n  </span>\n  <span class=\"text-secondary\"\n    >Last updated on: {{ lastUpdatedAt | date: \"short\" }}</span\n  >\n  &nbsp;&nbsp;\n  <a routerLink=\"./\">Refresh</a>\n</section>\n<br />\n<section class=\"brief\">\n  <!-- TABLE -->\n  <mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Type a country\"\n    />\n  </mat-form-field>\n\n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n      <!-- Rank Column -->\n      <ng-container matColumnDef=\"index\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Rank</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.index }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"country\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Country</th>\n        <td mat-cell *matCellDef=\"let row\">\n          {{ row.country }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"confirmed\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Confirmed</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.confirmed }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"deaths\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Death</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.deaths }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"recovered\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Recovered</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.recovered }}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n  </div>\n  <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 75, 100]\"></mat-paginator>\n</section>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\n\nconst BASE_URL = \"https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/\";\nconst API_BASE_URL = BASE_URL + \"jhu-edu\";\n\nconst API_ENDPOINTS = {\n  brief: `${API_BASE_URL}/brief`,\n  latest: `${API_BASE_URL}/latest`,\n  timeSeries: `${API_BASE_URL}/timeseries`\n};\n\nexport interface ICountry {\n  location: string;\n  country: string;\n  countrycode: object;\n  provincestate: string;\n  confirmed: number;\n  deaths: number;\n  recovered: number;\n  confirmedStr: string;\n  index?: number;\n}\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class C19Service {\n  constructor(private httpClient: HttpClient) {}\n\n  getBrief() {\n    return this.httpClient.get(API_ENDPOINTS.brief);\n  }\n\n  getLatest() {\n    // transform data\n    return this.httpClient.get(API_ENDPOINTS.latest).pipe(\n      map((response: any[]) => {\n        return response\n          .filter(item => item.confirmed > 10)\n          .map(item => {\n            return {\n              location: item.location,\n              country: item.countryregion,\n              countrycode: item.countrycode,\n              provincestate: item.provincestate,\n              confirmedStr: item.confirmed + \"\",\n              confirmed: item.confirmed,\n              deaths: item.deaths,\n              recovered: item.recovered\n            };\n          });\n      })\n    );\n  }\n\n  getTimeSeriesByCountry(countryCode = \"US\") {\n    return this.httpClient.get(\n      API_ENDPOINTS.timeSeries + \"?onlyCountries=true&iso2=\" + countryCode\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HTTP_INTERCEPTORS\n} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { LoadingScreenService } from \"../shared/loading-screen/loading-screen.service\";\nimport { finalize, delay } from \"rxjs/operators\";\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  activeRequests: number = 0;\n\n  constructor(private loadingScreenService: LoadingScreenService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    if (this.activeRequests === 0) {\n      this.loadingScreenService.startLoading();\n    }\n    this.activeRequests++;\n\n    return next.handle(request).pipe(\n      // delay(1000), // use to mimic slow network\n      finalize(() => {\n        this.activeRequests--;\n        if (this.activeRequests === 0) {\n          this.loadingScreenService.stopLoading();\n        }\n      })\n    );\n  }\n}\n\nexport const loadingInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true }\n];\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fullscreen-home',\n  templateUrl: './fullscreen-home.component.html',\n  styleUrls: ['./fullscreen-home.component.scss']\n})\nexport class FullscreenHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>List of app projects</h2>\n\n<ul>\n    <li><a routerLink=\"/apps/covid19-dashboard\">COVID-19 Dashboard</a></li>\n    <li><a routerLink=\"/apps/todo\">TODO app</a></li>\n\n</ul>","import { Component, OnInit } from \"@angular/core\";\nimport { INavData } from \"src/app/shared/dynamic-nav/dynamic-nav.component\";\n\n@Component({\n  selector: \"app-fullscreen\",\n  templateUrl: \"./fullscreen.component.html\",\n  styleUrls: [\"./fullscreen.component.scss\"]\n})\nexport class FullscreenComponent implements OnInit {\n  data: INavData = {\n    appName: \"Covid-19 Dashboard\",\n    navBackground: \"gradient-1\"\n  };\n\n  today = new Date();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<header>\n  <app-dynamic-nav [data]=\"data\"></app-dynamic-nav>\n</header>\n\n<section class=\"d-flex flex-column flex-fill\">\n  <section class=\"container-fluid\">\n    <router-outlet></router-outlet>\n  </section>\n</section>\n\n<footer class=\"bg-light py-3 w-100 d-flex justify-content-center\">\n  <span>Fullscreen Layout - {{ today | date }} </span>\n</footer>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FullscreenComponent } from \"./fullscreen.component\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { SharedModule } from \"src/app/shared/shared.module\";\nimport { C19DashboardComponent } from \"src/app/covid19-dashboard/c19-dashboard/c19-dashboard.component\";\nimport { FullscreenHomeComponent } from \"./fullscreen-home/fullscreen-home.component\";\nimport { CaseTableComponent } from \"src/app/covid19-dashboard/case-table/case-table.component\";\nimport { CaseStatisticComponent } from \"src/app/covid19-dashboard/case-statistic/case-statistic.component\";\nimport { TodoHomeComponent } from \"src/app/todo-app/todo-home/todo-home.component\";\nimport { TodoComponent } from \"src/app/todo-app/todo/todo.component\";\nimport { MaterialModule } from \"src/app/modules/material/material.module\";\nimport { FormsModule } from \"@angular/forms\";\n\n// for in memory api\nimport { HttpClientInMemoryWebApiModule } from \"angular-in-memory-web-api\";\nimport { AppData } from \"src/app/todo-app/app-data\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FullscreenComponent,\n    children: [\n      {\n        path: \"\",\n        component: FullscreenHomeComponent,\n      },\n      {\n        path: \"covid19-dashboard\",\n        component: C19DashboardComponent,\n      },\n      {\n        path: \"covid19-countries-table\",\n        component: CaseTableComponent,\n      },\n      {\n        path: \"todo\",\n        component: TodoHomeComponent,\n      },\n    ],\n  },\n];\n@NgModule({\n  declarations: [\n    FullscreenComponent,\n    FullscreenHomeComponent,\n    C19DashboardComponent,\n    CaseStatisticComponent,\n    CaseTableComponent,\n    TodoHomeComponent,\n    TodoComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    MaterialModule,\n    FormsModule,\n    // HttpClientInMemoryWebApiModule.forRoot(AppData), // toggle in memory\n  ],\n})\nexport class FullscreenModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { delay } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\nimport { DialogService } from \"../modules/dialog/dialog.service\";\nimport { ModalService } from \"../modules/modal/modal.service\";\n\n@Component({\n  selector: \"app-leetcode-reminder\",\n  templateUrl: \"./leetcode-reminder.component.html\",\n  styleUrls: [\"./leetcode-reminder.component.scss\"],\n})\nexport class LeetcodeReminderComponent implements OnInit {\n  email: string = \"rattanak22@gmail.com\";\n  result: string = \"\";\n\n  constructor(\n    private http: HttpClient,\n    private dialogService: DialogService,\n    private modalService: ModalService\n  ) {}\n\n  projectUrl = \"assets/json/projects.json\";\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    console.log(\"You submitted: \", this.email);\n    const subscribeURI =\n      environment.rootUrl +\n      environment.emailAPI.basePath +\n      environment.emailAPI.subscribe;\n\n    return this.http.post(subscribeURI, { email: this.email }).subscribe(\n      (data: any) => {\n        this.result = data.status;\n        this.email = \"\";\n      },\n      (error) => {\n        const data = {\n          title: \"Server Error\",\n          text:\n            \"We apology we were unable add your email to subscription at this time.\",\n        };\n        this.dialogService.openDialog(data);\n\n        // TODO use an toast might be better option\n      }\n    );\n  }\n\n  openModal() {\n    this.modalService.open();\n  }\n}\n","<h2>Leetcode Reminder</h2>\n\n<p><strong>Requirements MVP</strong></p>\n<ul>\n  <li>User input their email address and click send</li>\n  <li>User receives feedback after submission</li>\n  <li>User receive email with link to a Leetcode problem everyday</li>\n</ul>\n\n<div class=\"container mx-auto\">\n  <form (ngSubmit)=\"onSubmit()\" #emailForm=\"ngForm\">\n    <div class=\"form-row align-items-center\">\n      <div class=\"col-auto w-50\">\n        <label class=\"sr-only\" for=\"inlineFormInput\">Name</label>\n        <input type=\"text\" class=\"form-control mb-2\" placeholder=\"Enter your email\" name=\"email\" required\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" [(ngModel)]=\"email\" />\n      </div>\n      <div class=\"col-auto\">\n        <button type=\"submit\" class=\"btn btn-primary mb-2\" [disabled]=\"!emailForm.form.valid\">\n          Submit\n        </button>\n      </div>\n    </div>\n  </form>\n\n  <button mat-button class=\"btn btn-primary mb-2\" (click)=\"openModal()\">\n    Open Modal\n  </button>\n\n  <p class=\"text-success\">{{ result }}</p>\n\n  <h2 class=\"mt-5\">Sample Email</h2>\n  <div class=\"sample-email border p-3 mt-4\">\n    <h1 class=\"text-primary\">Question 1 - Two sum</h1>\n    <p>Given an array of integers, check whether there are two numbers...</p>\n    <a href=\"\">View Question on Leetcode</a>\n  </div>\n</div>","import { NgModule } from \"@angular/core\";\nimport { DialogComponent } from \"./dialog/dialog.component\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MaterialModule } from \"../material/material.module\";\n// dialog module that is reuseable\n\n@NgModule({\n  declarations: [DialogComponent],\n  imports: [MatButtonModule],\n  exports: [],\n})\nexport class DialogModule {}\n","import { Injectable } from \"@angular/core\";\n\n// Components\nimport { DialogComponent } from \"./dialog/dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DialogService {\n  constructor(public dialog: MatDialog) {}\n\n  openDialog(data): void {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      width: \"30%\",\n      data: data,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"close dialog result: \", result);\n    });\n  }\n  open(): void {}\n\n  close(): void {}\n}\n","import { Component, OnInit, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-dialog\",\n  templateUrl: \"./dialog.component.html\",\n  styleUrls: [\"./dialog.component.scss\"],\n})\nexport class DialogComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<DialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit(): void {}\n\n  onNoClick(result): void {\n    this.dialogRef.close(result);\n  }\n}\n","<h1 mat-dialog-title>{{ data.title }}</h1>\n<div mat-dialog-content>\n    <p>{{ data.text }}</p>\n</div>\n<hr />\n<div mat-dialog-actions class=\"d-flex justify-content-between\">\n    <a (click)=\"onNoClick(null)\">Cancel</a>\n    <button mat-raised-button color=\"primary\" mat-dialog-close=\"OK\">Ok</button>\n</div>","import { NgModule } from \"@angular/core\";\n\n// material modules\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\n\nconst materialModules = [\n  MatTableModule,\n  MatFormFieldModule,\n  MatPaginatorModule,\n  MatInputModule,\n  MatSortModule,\n  MatSelectModule,\n  MatDialogModule,\n  MatButtonModule,\n  MatIconModule,\n  MatSidenavModule,\n  MatCheckboxModule,\n];\n\n@NgModule({\n  declarations: [],\n  imports: [...materialModules],\n  exports: [...materialModules],\n})\nexport class MaterialModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { ModalService } from \"./modal.service\";\n\n@Component({\n  selector: \"app-modal\",\n  templateUrl: \"./modal.component.html\",\n  styleUrls: [\"./modal.component.scss\"],\n})\nexport class ModalComponent implements OnInit {\n  display$: Observable<\"open\" | \"close\">;\n\n  constructor(private modalService: ModalService) {}\n\n  ngOnInit() {\n    this.display$ = this.modalService.watch();\n  }\n\n  close() {\n    console.log(\"modal closes\");\n    this.modalService.close();\n  }\n}\n","<ng-container *ngIf=\"display$ | async as display\">\n    <section [class.open]=\"display === 'open'\" (click)=\"close()\">\n        <div (click)=\"$event.stopPropagation()\">\n            <button class=\"close\" type=\"button\" (click)=\"close()\">X</button>\n\n            <h1>Hello World</h1>\n        </div>\n\n        <div class=\"d-flex justify-content-between action-btns\">\n            <a (click)=\"close()\">Cancel</a>\n            <button mat-raised-button color=\"primary\">Ok</button>\n        </div>\n    </section>\n</ng-container>","// Dialog modal with no dependency on library, i.e Angular material dialog\n\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ModalService {\n  private display: BehaviorSubject<\"open\" | \"close\"> = new BehaviorSubject(\n    \"close\"\n  );\n\n  watch(): Observable<\"open\" | \"close\"> {\n    return this.display.asObservable();\n  }\n\n  open() {\n    this.display.next(\"open\");\n  }\n\n  close() {\n    this.display.next(\"close\");\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { delay } from 'rxjs/operators';\n\n@Component({\n  selector: \"app-projects\",\n  templateUrl: \"./projects.component.html\",\n  styleUrls: [\"./projects.component.scss\"]\n})\nexport class ProjectsComponent implements OnInit {\n  projectUrl = \"assets/json/projects.json\";\n  projects: any = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.getProjects().subscribe(projects => {\n      console.log(\"ProjectsComponent -> ngOnInit -> projects\", projects);\n      this.projects = projects;\n    });\n  }\n\n  getProjects() {\n    return this.http.get(this.projectUrl).pipe(delay(5000));\n  }\n}\n","<h2>List of Projects I have built</h2>\n\n<p><a routerLink=\"/leetcode-reminder\">Leetcode Reminder</a></p>\n<p><a routerLink=\"/song-lyrics\">Song Lyrics</a></p>\n<p><a routerLink=\"/algorithm-visualizer\">Algorithm Visualizer</a></p>\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nexport interface INavData {\n  appName: string;\n  navBackground: string;\n}\n@Component({\n  selector: \"app-dynamic-nav\",\n  templateUrl: \"./dynamic-nav.component.html\",\n  styleUrls: [\"./dynamic-nav.component.scss\"]\n})\nexport class DynamicNavComponent implements OnInit {\n  @Input() data: INavData;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<nav class=\"navbar navbar-dark navbar-expand-lg portfolio-navbar py-3\" [ngClass]=\"data.navBackground || 'gradient'\">\n  <div class=\"container d-flex flex-nowrap\">\n    <div>\n      <a class=\"navbar-brand logo\">{{ data.appName }}</a>\n    </div>\n    <div class=\"d-flex\" id=\"navbarNav\">\n      <ul class=\"nav ml-auto\">\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link active\" routerLink=\"/\">Home</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-introduction',\n  templateUrl: './introduction.component.html',\n  styleUrls: ['./introduction.component.scss']\n})\nexport class IntroductionComponent implements OnInit {\n\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"d-flex flex-column justify-content-center align-items-center\">\n  <section class=\"intro\">\n    <div class=\"avatar\"></div>\n    <div class=\"about-me\">\n      <p>\n        Hello! I am <strong>Rattanak Chea</strong>. I am a software engineer\n        developer. I have the passion for building full stack applications.\n      </p>\n    </div>\n  </section>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  ElementRef,\n  ChangeDetectorRef\n} from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { LoadingScreenService } from \"./loading-screen.service\";\nimport { debounceTime } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-loading-screen\",\n  templateUrl: \"./loading-screen.component.html\",\n  styleUrls: [\"./loading-screen.component.scss\"]\n})\nexport class LoadingScreenComponent implements AfterViewInit, OnDestroy {\n  debounceTime: number = 200;\n  loading: boolean = false;\n  loadingSubscription: Subscription;\n\n  constructor(\n    private loadingScreenService: LoadingScreenService,\n    private _elmRef: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngAfterViewInit(): void {\n    this._elmRef.nativeElement.style.display = \"none\";\n    this.loadingSubscription = this.loadingScreenService.loadingStatus\n      .pipe(debounceTime(this.debounceTime))\n      .subscribe((status: boolean) => {\n        this._elmRef.nativeElement.style.display = status ? \"block\" : \"none\";\n        this._changeDetectorRef.detectChanges();\n      });\n  }\n\n  ngOnDestroy() {\n    this.loadingSubscription.unsubscribe();\n  }\n}\n","<div class=\"loading-screen-wrapper\">\n  <div class=\"loading-screen-icon\">\n    <div class=\"blobs\">\n      <div class=\"blob-center\"></div>\n      <div class=\"blob\"></div>\n      <div class=\"blob\"></div>\n      <div class=\"blob\"></div>\n      <div class=\"blob\"></div>\n      <div class=\"blob\"></div>\n      <div class=\"blob\"></div>\n    </div>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n      <defs>\n        <filter id=\"goo\">\n          <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\" />\n          <feColorMatrix\n            in=\"blur\"\n            mode=\"matrix\"\n            values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\"\n            result=\"goo\"\n          />\n          <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n        </filter>\n      </defs>\n    </svg>\n  </div>\n</div>\n\nLoading now...\n","import { Injectable } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LoadingScreenService {\n  constructor() {}\n\n  private _loading: boolean = false;\n  loadingStatus: Subject<boolean> = new Subject();\n\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  set loading(value) {\n    console.log(\"set loading status\");\n    this._loading = value;\n    this.loadingStatus.next(value);\n  }\n\n  startLoading() {\n    this.loading = true;\n  }\n\n  stopLoading() {\n    this.loading = false;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-navigation\",\n  templateUrl: \"./navigation.component.html\",\n  styleUrls: [\"./navigation.component.scss\"]\n})\nexport class NavigationComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<nav class=\"navbar navbar-dark navbar-expand-lg portfolio-navbar py-3\">\n  <div class=\"container d-flex flex-nowrap\">\n    <div>\n      <a class=\"logo btn btn-primary\" routerLink=\"/\">Rattanak Chea</a>\n    </div>\n    <div class=\"d-flex\" id=\"navbarNav\">\n      <ul class=\"nav ml-auto\">\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link active\" routerLink=\"\">Home</a>\n        </li>\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link\" routerLink=\"/projects\">Projects</a>\n        </li>\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link\" routerLink=\"/apps\">Apps</a>\n        </li>\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link\" routerLink=\"/playground\">Playground</a>\n        </li>\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link\" href=\"/bootstrap\">Bootstrap UI</a>\n        </li>\n        <li class=\"nav-item\" role=\"presentation\">\n          <a class=\"nav-link\" href=\"\">Dark Theme</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page404',\n  templateUrl: './page404.component.html',\n  styleUrls: ['./page404.component.scss']\n})\nexport class Page404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"wrapper d-flex flex-column justify-content-between\">\n  <app-navigation></app-navigation>\n\n  <section class=\"container content d-flex flex-fill\" role=\"main\">\n    <h2>404 <span class=\"text-secondary\">| Page Not Found</span></h2>\n    <h4>\n      Would you like to visit the\n      <span class=\"text-secondary\">home page</span> instead?\n    </h4>\n  </section>\n\n  <footer class=\"gradient py-3 w-100 d-flex justify-content-center\">\n    <span>Default Layout</span>\n  </footer>\n</section>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { NavigationComponent } from \"./navigation/navigation.component\";\nimport { RouterModule } from \"@angular/router\";\nimport { Page404Component } from \"./page404/page404.component\";\nimport { LoadingScreenComponent } from \"./loading-screen/loading-screen.component\";\nimport { DynamicNavComponent } from \"./dynamic-nav/dynamic-nav.component\";\nimport { IntroductionComponent } from \"./introduction/introduction.component\";\n\nconst commonComponents = [\n  NavigationComponent,\n  IntroductionComponent,\n  Page404Component,\n  LoadingScreenComponent,\n  DynamicNavComponent,\n];\n@NgModule({\n  declarations: [...commonComponents],\n  imports: [CommonModule, RouterModule],\n  exports: [RouterModule, ...commonComponents],\n})\nexport class SharedModule {}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { ITodoFilter } from \"./todo.model\";\nimport { map, shareReplay } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FilterStoreService {\n  // class members\n\n  // initial state\n  private _filterStore = new BehaviorSubject<ITodoFilter>({\n    search: \"\",\n    isCompleted: null,\n  });\n  // Expose the observable$ part of the _todos subject (read only stream)\n  filter$ = this._filterStore.asObservable();\n\n  get todoFilter(): ITodoFilter {\n    return this._filterStore.getValue(); //or just _filterStore.value, ?\n  }\n\n  setState(val: ITodoFilter) {\n    this._filterStore.next(val);\n  }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { TodosStoreService } from \"../todos-store.service\";\nimport { FilterStoreService } from \"../filter-store.service\";\nimport { ITodoFilter, Todo } from \"../todo.model\";\nimport { combineLatest, Observable, of } from \"rxjs\";\nimport { debounceTime, map, switchMap } from \"rxjs/operators\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-todo-home\",\n  templateUrl: \"./todo-home.component.html\",\n  styleUrls: [\"./todo-home.component.scss\"],\n})\nexport class TodoHomeComponent implements OnInit {\n  @ViewChild(\"todoTitleInput\") todoTitleInput: ElementRef;\n\n  // optimization, rerenders only todos that change instead of the entire list of todos\n  todosTrackFn = (i, todo) => todo.id;\n\n  todosList$: Observable<Todo[]>; // all todos\n  todosListFiltered$: Observable<Todo[]>; // todos list with filter\n\n  todoFilter: ITodoFilter = {\n    search: \"\",\n    isCompleted: null,\n  };\n  filterAction$: Observable<ITodoFilter>;\n  queryParameter$: Observable<Params>;\n\n  constructor(\n    public todosStoreService: TodosStoreService,\n    private filterStoreService: FilterStoreService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.todosList$ = this.todosStoreService.todos$;\n    this.filterAction$ = this.filterStoreService.filter$;\n    this.queryParameter$ = this.route.queryParams.pipe(debounceTime(300));\n\n    // take current parameter\n    this.todoFilter = { ...this.route.snapshot.queryParams };\n\n    // This is awesome\n    // this.todosListFiltered$ = combine$.pipe(\n    //   switchMap(([todosList, filter]) => {\n    //     console.log(\"TodoHomeComponent -> combine -> value\", todosList);\n    //     console.log(\"TodoHomeComponent -> combine -> filter\", filter);\n\n    //     let filtered = todosList.filter(\n    //       (item: Todo) => item.title.indexOf(filter.search) !== -1\n    //     );\n\n    //     // Filter Status\n    //     if (filter.isCompleted !== null) {\n    //       filtered = filtered.filter(\n    //         (item) => item.isCompleted === filter.isCompleted\n    //       );\n    //     }\n\n    //     return of(filtered);\n    //   })\n    // );\n\n    // A simpler version using just Map\n    this.todosListFiltered$ = combineLatest(\n      [this.todosList$, this.queryParameter$]\n      // this.filterStoreService.filter$,\n    ).pipe(\n      map(([todosList, query]) => {\n        console.log(\"TodoHomeComponent -> ngOnInit -> filter\", query);\n\n        this.updateFilterState(query);\n\n        let filtered = todosList;\n        if (query.search) {\n          filtered = todosList.filter(\n            (item: Todo) =>\n              item.title.toLowerCase().indexOf(query.search.toLowerCase()) !==\n              -1\n          );\n        }\n\n        // Filter Status\n        if (\"isCompleted\" in query) {\n          if (query.isCompleted === \"\") return filtered;\n          filtered = filtered.filter(\n            (item) => item.isCompleted === (query.isCompleted == \"true\")\n          );\n        }\n        return filtered;\n      })\n    );\n  }\n\n  onAddTodo(title: string) {\n    this.todosStoreService.addTodo(title);\n    this.todoTitleInput.nativeElement.value = \"\";\n  }\n\n  onChange(event) {\n    console.log(\"change: \", this.todoFilter);\n    let newState = { ...this.todoFilter };\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { ...newState },\n    });\n  }\n\n  updateFilterState(state) {\n    // let newState = { ...this.todoFilter };\n    // this.todoFilter = state;\n    this.filterStoreService.setState(state);\n  }\n}\n","<section class=\"container\">\n    <h1 class=\"my-3\">Todos App</h1>\n\n\n    <section class=\"bg-secondary p-4\">\n        <h2>Filter</h2>\n        {{ todoFilter | json }}\n        <div class=\"row d-flex align-items-baseline\">\n            <div class=\"col-auto\">\n                <input type=\"text\" class=\"form-control\" id=\"search\" placeholder=\"Search todo\"\n                    [(ngModel)]=\"todoFilter.search\" (ngModelChange)=\"onChange($event)\">\n                <!-- ngModelChange must be after ngModel, to make it fire later -->\n            </div>\n\n            <div class=\"col-auto\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Status</mat-label>\n                    <mat-select [(ngModel)]=\"todoFilter.isCompleted\" (ngModelChange)=\"onChange($event)\">\n                        <mat-option value=\"\">\n                            All\n                        </mat-option>\n                        <mat-option [value]=\"true\">\n                            Complete\n                        </mat-option>\n                        <mat-option [value]=\"false\">\n                            Incomplete\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n\n        </div>\n    </section>\n\n\n    <div class=\"row\">\n        <div class=\"col-auto\">\n            <input type=\"text\" class=\"form-control\" id=\"todo\" placeholder=\"What are you doing?\"\n                (keyup.enter)=\"onAddTodo(todoTitleInput.value)\" #todoTitleInput>\n        </div>\n        <div class=\"col-auto\">\n            <button class=\"btn btn-primary\" (click)=\"onAddTodo(todoTitleInput.value)\">Add</button>\n        </div>\n    </div>\n\n\n    <!-- All Todos -->\n    <div class=\"row my-3\">\n        <div class=\"col-12 card\">\n            <h2>All todos:</h2>\n            <ng-container *ngFor=\"let todo of todosListFiltered$ | async; trackBy: todosTrackFn\">\n                <app-todo [todo]=\"todo\" (complete)=\"todosStoreService.setCompleted(todo.id, $event)\"\n                    (remove)=\"todosStoreService.removeTodo($event)\">\n                </app-todo>\n            </ng-container>\n        </div>\n    </div>\n\n    <div class=\"row my-3\">\n        <div class=\"col-12 col-sm-5 uncompleted card\">\n\n            <h2>Uncompleted todos:</h2>\n            <ng-container *ngFor=\"let todo of todosStoreService.uncompletedTodos$ | async; trackBy: todosTrackFn\">\n                <app-todo [todo]=\"todo\" (complete)=\"todosStoreService.setCompleted(todo.id, $event)\"\n                    (remove)=\"todosStoreService.removeTodo($event)\">\n                </app-todo>\n            </ng-container>\n        </div>\n\n        <div class=\"col-12 col-sm-5 offset-sm-2 completed card\">\n            <h2>Completed todos:</h2>\n            <app-todo *ngFor=\"let todo of todosStoreService.completedTodos$ | async; trackBy: todosTrackFn\"\n                [todo]=\"todo\" (complete)=\"todosStoreService.setCompleted(todo.id, $event)\"\n                (remove)=\"todosStoreService.removeTodo($event)\">\n            </app-todo>\n        </div>\n    </div>\n\n\n\n\n</section>","export interface Todo {\n  id?: number;\n  title: string;\n  isCompleted: boolean;\n}\n\nexport function uuid(): number {\n  return (Math.random() * 16) | 0;\n}\n\nexport interface ITodoFilter {\n  search?: string;\n  isCompleted?: string;\n}\n\nexport class TodoData {\n  static todos: Todo[] = [\n    {\n      id: 1,\n      title: \"Todo In Memory\",\n      isCompleted: false,\n    },\n  ];\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from \"@angular/core\";\nimport { Todo } from \"../todo.model\";\n\n@Component({\n  selector: \"app-todo\",\n  templateUrl: \"./todo.component.html\",\n  styleUrls: [\"./todo.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TodoComponent implements OnInit {\n  @Input() todo: Todo;\n  @Output() complete = new EventEmitter<boolean>();\n  @Output() remove = new EventEmitter<any>();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"form-check d-flex align-items-center justify-content-between my-2\">\n    <div>\n        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" [checked]=\"todo.isCompleted\"\n            (change)=\"complete.emit($event.target.checked)\">\n        <label class=\"form-check-label\" for=\"flexCheckDefault\">\n            <span [ngClass]=\"{'completed': todo.isCompleted}\" class=\"todo-title\">\n                {{todo.title}}\n            </span>\n        </label>\n\n        <!-- <mat-checkbox class=\"example-margin\" [checked]=\"todo.isCompleted\" (change)=\"complete.emit(todo.isCompleted)\">\n            <h3 [ngClass]=\"{'completed': todo.isCompleted}\" class=\"todo-title\">\n                {{todo.title}}\n            </h3>\n        </mat-checkbox> -->\n    </div>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=remove.emit(todo.id)>Remove</button>\n</div>","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Todo } from \"./todo.model\";\nimport { ApiHttpService } from \"../services/api-http.service\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TodosApiService {\n  private inMemoryApi: boolean = false;\n\n  // Rattanak's mock api endpoint\n  private apiBaseUrl = \"https://5f7645a4fdffe3001637facc.mockapi.io/todos/todo\";\n\n  constructor(private http: HttpClient) {\n    if (this.inMemoryApi) {\n      this.apiBaseUrl = \"/api/todos\";\n    }\n  }\n\n  get() {\n    return this.http.get<Todo[]>(`${this.apiBaseUrl}`);\n  }\n\n  create(todo: Todo) {\n    return this.http.post<Todo>(`${this.apiBaseUrl}`, todo);\n  }\n\n  remove(id) {\n    return this.http.delete(`${this.apiBaseUrl}/${id}`);\n  }\n\n  setCompleted(id: number, isCompleted: boolean) {\n    return this.http.put<Todo>(`${this.apiBaseUrl}/${id}`, {\n      isCompleted,\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, combineLatest, of } from \"rxjs\";\nimport { Todo, uuid } from \"./todo.model\";\nimport { map, shareReplay, switchMap } from \"rxjs/operators\";\nimport { TodosApiService } from \"./todos-api.service\";\nimport { FilterStoreService } from \"./filter-store.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TodosStoreService {\n  // - We set the initial state in BehaviorSubject's constructor\n  // - Nobody outside the Store should have access to the BehaviorSubject\n  //   because it has the write rights\n  // - Writing to state should be handled by specialized Store methods (ex: addTodo, removeTodo, etc)\n  // - Create one BehaviorSubject per store entity, for example if you have TodoGroups\n  //   create a new BehaviorSubject for it, as well as the observable$, and getters/setters\n  private readonly _todosStore = new BehaviorSubject<Todo[]>([]);\n\n  // Expose the observable$ part of the _todosStore subject (read only stream)\n  readonly todos$ = this._todosStore.asObservable();\n\n  // we'll compose the todos$ observable with map operator to create a stream of only completed todos\n  readonly completedTodos$ = this.todos$.pipe(\n    map((todos: Todo[]) => todos.filter((todo) => todo.isCompleted))\n  );\n\n  readonly uncompletedTodos$ = this.todos$.pipe(\n    map((todos) => todos.filter((todo) => !todo.isCompleted))\n  );\n\n  constructor(private todosService: TodosApiService) {\n    this.fetchAll();\n  }\n\n  async fetchAll() {\n    let todos = await this.todosService.get().toPromise();\n    this.setState(todos);\n  }\n\n  // the getter will return the last value emitted in _todosStore subject\n  get todos(): Todo[] {\n    return this._todosStore.getValue();\n  }\n\n  // assigning a value to this.todos will push it onto the observable\n  // and down to all of its subsribers (ex: this.todos = [])\n  set todos(val: Todo[]) {\n    this._todosStore.next(val);\n  }\n\n  setState(val: Todo[]) {\n    this._todosStore.next(val);\n  }\n\n  async addTodo(title: string) {\n    if (title && title.length) {\n      // This is called an optimistic update\n      // updating the record locally before actually getting a response from the server\n      // this way, the interface seems blazing fast to the enduser\n      // and we just assume that the server will return success responses anyway most of the time.\n      // if server returns an error, we just revert back the changes in the catch statement\n\n      const tmpId = uuid();\n      const tmpTodo = { id: tmpId, title, isCompleted: false };\n\n      this.todos = [...this.todos, tmpTodo];\n\n      try {\n        const todo = await this.todosService\n          .create({ title, isCompleted: false })\n          .toPromise();\n\n        // we swap the local tmp record with the record from the server (id must be updated)\n        const index = this.todos.indexOf(\n          this.todos.find((t) => t.id === tmpId)\n        );\n        this.todos[index] = {\n          ...todo,\n        };\n        this.todos = [...this.todos];\n      } catch (e) {\n        // is server sends back an error, we revert the changes\n        console.error(e);\n        this.removeTodo(tmpId, false);\n      }\n    }\n  }\n\n  async removeTodo(id: number, serverRemove = true) {\n    // optimistic update\n    const todo = this.todos.find((t) => t.id === id);\n    this.todos = this.todos.filter((todo) => todo.id !== id);\n\n    if (serverRemove) {\n      try {\n        await this.todosService.remove(id).toPromise();\n      } catch (e) {\n        console.error(e);\n        this.todos = [...this.todos, todo];\n      }\n    }\n  }\n\n  async setCompleted(id: number, isCompleted: boolean) {\n    let todo = this.todos.find((todo) => todo.id === id);\n\n    if (todo) {\n      // optimistic update\n      const index = this.todos.indexOf(todo);\n      this.todos[index] = {\n        ...todo,\n        isCompleted,\n      };\n      this.todos = [...this.todos];\n\n      try {\n        await this.todosService.setCompleted(id, isCompleted).toPromise();\n      } catch (e) {\n        console.error(e);\n        this.todos[index] = {\n          ...todo,\n          isCompleted: !isCompleted,\n        };\n      }\n    }\n  }\n}\n","/* common environment for\n/ -common API endpoints\n/\n*/\n\nexport const commonEnvironment = {\n  emailAPI: {\n    basePath: \"email/\",\n    subscribe: \"subscribe\"\n  },\n  HEADER: {\n    AUTHORIZATION: \"Authorization\"\n  }\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { commonEnvironment } from './environment.common';\n\nconst PORT = 3000;\n\nexport const environment = {\n  production: false,\n  rootUrl: `http://localhost:${PORT}/`,\n  ...commonEnvironment\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}